#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace COMET.Server.Domain
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GAM_Complex_Op")]
	public partial class ConsoleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDIRECTOR(DIRECTOR instance);
    partial void UpdateDIRECTOR(DIRECTOR instance);
    partial void DeleteDIRECTOR(DIRECTOR instance);
    partial void InsertELEMENT_STATUS(ELEMENT_STATUS instance);
    partial void UpdateELEMENT_STATUS(ELEMENT_STATUS instance);
    partial void DeleteELEMENT_STATUS(ELEMENT_STATUS instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertGROUP_lkp(GROUP_lkp instance);
    partial void UpdateGROUP_lkp(GROUP_lkp instance);
    partial void DeleteGROUP_lkp(GROUP_lkp instance);
    partial void InsertGROUP_MANAGER(GROUP_MANAGER instance);
    partial void UpdateGROUP_MANAGER(GROUP_MANAGER instance);
    partial void DeleteGROUP_MANAGER(GROUP_MANAGER instance);
    partial void InsertNOTE(NOTE instance);
    partial void UpdateNOTE(NOTE instance);
    partial void DeleteNOTE(NOTE instance);
    partial void InsertPROGRAM(PROGRAM instance);
    partial void UpdatePROGRAM(PROGRAM instance);
    partial void DeletePROGRAM(PROGRAM instance);
    partial void InsertPROJECT_STATUS(PROJECT_STATUS instance);
    partial void UpdatePROJECT_STATUS(PROJECT_STATUS instance);
    partial void DeletePROJECT_STATUS(PROJECT_STATUS instance);
    partial void InsertREQUEST_STATUS(REQUEST_STATUS instance);
    partial void UpdateREQUEST_STATUS(REQUEST_STATUS instance);
    partial void DeleteREQUEST_STATUS(REQUEST_STATUS instance);
    partial void InsertBUSINESS_TYPE(BUSINESS_TYPE instance);
    partial void UpdateBUSINESS_TYPE(BUSINESS_TYPE instance);
    partial void DeleteBUSINESS_TYPE(BUSINESS_TYPE instance);
    partial void InsertSUPPORT_AREA(SUPPORT_AREA instance);
    partial void UpdateSUPPORT_AREA(SUPPORT_AREA instance);
    partial void DeleteSUPPORT_AREA(SUPPORT_AREA instance);
    partial void InsertSUPPORT_UNIT(SUPPORT_UNIT instance);
    partial void UpdateSUPPORT_UNIT(SUPPORT_UNIT instance);
    partial void DeleteSUPPORT_UNIT(SUPPORT_UNIT instance);
    partial void InsertREQUEST(REQUEST instance);
    partial void UpdateREQUEST(REQUEST instance);
    partial void DeleteREQUEST(REQUEST instance);
    partial void InsertELEMENT(ELEMENT instance);
    partial void UpdateELEMENT(ELEMENT instance);
    partial void DeleteELEMENT(ELEMENT instance);
    partial void InsertREQUEST_TYPE(REQUEST_TYPE instance);
    partial void UpdateREQUEST_TYPE(REQUEST_TYPE instance);
    partial void DeleteREQUEST_TYPE(REQUEST_TYPE instance);
    partial void InsertREQUEST_CATEGORY(REQUEST_CATEGORY instance);
    partial void UpdateREQUEST_CATEGORY(REQUEST_CATEGORY instance);
    partial void DeleteREQUEST_CATEGORY(REQUEST_CATEGORY instance);
    partial void InsertPROJECT_TYPE(PROJECT_TYPE instance);
    partial void UpdatePROJECT_TYPE(PROJECT_TYPE instance);
    partial void DeletePROJECT_TYPE(PROJECT_TYPE instance);
    partial void InsertVALUE_DRIVER(VALUE_DRIVER instance);
    partial void UpdateVALUE_DRIVER(VALUE_DRIVER instance);
    partial void DeleteVALUE_DRIVER(VALUE_DRIVER instance);
    partial void InsertPROJECT(PROJECT instance);
    partial void UpdatePROJECT(PROJECT instance);
    partial void DeletePROJECT(PROJECT instance);
    #endregion
		
		public ConsoleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConsoleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConsoleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConsoleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DIRECTOR> DIRECTORs
		{
			get
			{
				return this.GetTable<DIRECTOR>();
			}
		}
		
		public System.Data.Linq.Table<ELEMENT_STATUS> ELEMENT_STATUS
		{
			get
			{
				return this.GetTable<ELEMENT_STATUS>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<GROUP_lkp> GROUP_lkps
		{
			get
			{
				return this.GetTable<GROUP_lkp>();
			}
		}
		
		public System.Data.Linq.Table<GROUP_MANAGER> GROUP_MANAGERs
		{
			get
			{
				return this.GetTable<GROUP_MANAGER>();
			}
		}
		
		public System.Data.Linq.Table<NOTE> NOTEs
		{
			get
			{
				return this.GetTable<NOTE>();
			}
		}
		
		public System.Data.Linq.Table<PROGRAM> PROGRAMs
		{
			get
			{
				return this.GetTable<PROGRAM>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_STATUS> PROJECT_STATUS
		{
			get
			{
				return this.GetTable<PROJECT_STATUS>();
			}
		}
		
		public System.Data.Linq.Table<REQUEST_STATUS> REQUEST_STATUS
		{
			get
			{
				return this.GetTable<REQUEST_STATUS>();
			}
		}
		
		public System.Data.Linq.Table<BUSINESS_TYPE> BUSINESS_TYPEs
		{
			get
			{
				return this.GetTable<BUSINESS_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<SUPPORT_AREA> SUPPORT_AREAs
		{
			get
			{
				return this.GetTable<SUPPORT_AREA>();
			}
		}
		
		public System.Data.Linq.Table<SUPPORT_UNIT> SUPPORT_UNITs
		{
			get
			{
				return this.GetTable<SUPPORT_UNIT>();
			}
		}
		
		public System.Data.Linq.Table<REQUEST> REQUESTs
		{
			get
			{
				return this.GetTable<REQUEST>();
			}
		}
		
		public System.Data.Linq.Table<ELEMENT> ELEMENTs
		{
			get
			{
				return this.GetTable<ELEMENT>();
			}
		}
		
		public System.Data.Linq.Table<REQUEST_TYPE> REQUEST_TYPEs
		{
			get
			{
				return this.GetTable<REQUEST_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<REQUEST_CATEGORY> REQUEST_CATEGORies
		{
			get
			{
				return this.GetTable<REQUEST_CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT_TYPE> PROJECT_TYPEs
		{
			get
			{
				return this.GetTable<PROJECT_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<VALUE_DRIVER> VALUE_DRIVERs
		{
			get
			{
				return this.GetTable<VALUE_DRIVER>();
			}
		}
		
		public System.Data.Linq.Table<PROJECT> PROJECTs
		{
			get
			{
				return this.GetTable<PROJECT>();
			}
		}
		
		public System.Data.Linq.Table<SUPPORT_AREA_TO_PROGRAM> SUPPORT_AREA_TO_PROGRAMs
		{
			get
			{
				return this.GetTable<SUPPORT_AREA_TO_PROGRAM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.DIRECTOR")]
	public partial class DIRECTOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DIRECTOR_ID;
		
		private System.DateTime _START_DATE;
		
		private System.Nullable<System.DateTime> _END_DATE;
		
		private EntitySet<GROUP_MANAGER> _GROUP_MANAGERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDIRECTOR_IDChanging(int value);
    partial void OnDIRECTOR_IDChanged();
    partial void OnSTART_DATEChanging(System.DateTime value);
    partial void OnSTART_DATEChanged();
    partial void OnEND_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnEND_DATEChanged();
    #endregion
		
		public DIRECTOR()
		{
			this._GROUP_MANAGERs = new EntitySet<GROUP_MANAGER>(new Action<GROUP_MANAGER>(this.attach_GROUP_MANAGERs), new Action<GROUP_MANAGER>(this.detach_GROUP_MANAGERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECTOR_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DIRECTOR_ID
		{
			get
			{
				return this._DIRECTOR_ID;
			}
			set
			{
				if ((this._DIRECTOR_ID != value))
				{
					this.OnDIRECTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._DIRECTOR_ID = value;
					this.SendPropertyChanged("DIRECTOR_ID");
					this.OnDIRECTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime START_DATE
		{
			get
			{
				return this._START_DATE;
			}
			set
			{
				if ((this._START_DATE != value))
				{
					this.OnSTART_DATEChanging(value);
					this.SendPropertyChanging();
					this._START_DATE = value;
					this.SendPropertyChanged("START_DATE");
					this.OnSTART_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> END_DATE
		{
			get
			{
				return this._END_DATE;
			}
			set
			{
				if ((this._END_DATE != value))
				{
					this.OnEND_DATEChanging(value);
					this.SendPropertyChanging();
					this._END_DATE = value;
					this.SendPropertyChanged("END_DATE");
					this.OnEND_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIRECTOR_GROUP_MANAGER", Storage="_GROUP_MANAGERs", ThisKey="DIRECTOR_ID", OtherKey="DIRECTOR_ID")]
		public EntitySet<GROUP_MANAGER> GROUP_MANAGERs
		{
			get
			{
				return this._GROUP_MANAGERs;
			}
			set
			{
				this._GROUP_MANAGERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GROUP_MANAGERs(GROUP_MANAGER entity)
		{
			this.SendPropertyChanging();
			entity.DIRECTOR = this;
		}
		
		private void detach_GROUP_MANAGERs(GROUP_MANAGER entity)
		{
			this.SendPropertyChanging();
			entity.DIRECTOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.ELEMENT_STATUS")]
	public partial class ELEMENT_STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ELEMENT_STATUS_ID;
		
		private string _ELEMENT_STATUS_TEXT;
		
		private byte _SORT_ORDER;
		
		private EntitySet<ELEMENT> _ELEMENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnELEMENT_STATUS_IDChanging(byte value);
    partial void OnELEMENT_STATUS_IDChanged();
    partial void OnELEMENT_STATUS_TEXTChanging(string value);
    partial void OnELEMENT_STATUS_TEXTChanged();
    partial void OnSORT_ORDERChanging(byte value);
    partial void OnSORT_ORDERChanged();
    #endregion
		
		public ELEMENT_STATUS()
		{
			this._ELEMENTs = new EntitySet<ELEMENT>(new Action<ELEMENT>(this.attach_ELEMENTs), new Action<ELEMENT>(this.detach_ELEMENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELEMENT_STATUS_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ELEMENT_STATUS_ID
		{
			get
			{
				return this._ELEMENT_STATUS_ID;
			}
			set
			{
				if ((this._ELEMENT_STATUS_ID != value))
				{
					this.OnELEMENT_STATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._ELEMENT_STATUS_ID = value;
					this.SendPropertyChanged("ELEMENT_STATUS_ID");
					this.OnELEMENT_STATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELEMENT_STATUS_TEXT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ELEMENT_STATUS_TEXT
		{
			get
			{
				return this._ELEMENT_STATUS_TEXT;
			}
			set
			{
				if ((this._ELEMENT_STATUS_TEXT != value))
				{
					this.OnELEMENT_STATUS_TEXTChanging(value);
					this.SendPropertyChanging();
					this._ELEMENT_STATUS_TEXT = value;
					this.SendPropertyChanged("ELEMENT_STATUS_TEXT");
					this.OnELEMENT_STATUS_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SORT_ORDER", DbType="TinyInt NOT NULL")]
		public byte SORT_ORDER
		{
			get
			{
				return this._SORT_ORDER;
			}
			set
			{
				if ((this._SORT_ORDER != value))
				{
					this.OnSORT_ORDERChanging(value);
					this.SendPropertyChanging();
					this._SORT_ORDER = value;
					this.SendPropertyChanged("SORT_ORDER");
					this.OnSORT_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_STATUS_ELEMENT", Storage="_ELEMENTs", ThisKey="ELEMENT_STATUS_ID", OtherKey="ELEMENT_STATUS_ID")]
		public EntitySet<ELEMENT> ELEMENTs
		{
			get
			{
				return this._ELEMENTs;
			}
			set
			{
				this._ELEMENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ELEMENTs(ELEMENT entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT_STATUS = this;
		}
		
		private void detach_ELEMENTs(ELEMENT entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT_STATUS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EMPLOYEE_ID;
		
		private System.DateTime _START_DATE;
		
		private System.Nullable<System.DateTime> _END_DATE;
		
		private int _GROUP_MANAGER_START;
		
		private EntitySet<NOTE> _NOTEs;
		
		private EntitySet<SUPPORT_AREA> _SUPPORT_AREAs;
		
		private EntitySet<SUPPORT_AREA> _SUPPORT_AREAs1;
		
		private EntityRef<GROUP_MANAGER> _GROUP_MANAGER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMPLOYEE_IDChanging(int value);
    partial void OnEMPLOYEE_IDChanged();
    partial void OnSTART_DATEChanging(System.DateTime value);
    partial void OnSTART_DATEChanged();
    partial void OnEND_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnEND_DATEChanged();
    partial void OnGROUP_MANAGER_STARTChanging(int value);
    partial void OnGROUP_MANAGER_STARTChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._NOTEs = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTEs), new Action<NOTE>(this.detach_NOTEs));
			this._SUPPORT_AREAs = new EntitySet<SUPPORT_AREA>(new Action<SUPPORT_AREA>(this.attach_SUPPORT_AREAs), new Action<SUPPORT_AREA>(this.detach_SUPPORT_AREAs));
			this._SUPPORT_AREAs1 = new EntitySet<SUPPORT_AREA>(new Action<SUPPORT_AREA>(this.attach_SUPPORT_AREAs1), new Action<SUPPORT_AREA>(this.detach_SUPPORT_AREAs1));
			this._GROUP_MANAGER = default(EntityRef<GROUP_MANAGER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EMPLOYEE_ID
		{
			get
			{
				return this._EMPLOYEE_ID;
			}
			set
			{
				if ((this._EMPLOYEE_ID != value))
				{
					this.OnEMPLOYEE_IDChanging(value);
					this.SendPropertyChanging();
					this._EMPLOYEE_ID = value;
					this.SendPropertyChanged("EMPLOYEE_ID");
					this.OnEMPLOYEE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_DATE", DbType="Date NOT NULL")]
		public System.DateTime START_DATE
		{
			get
			{
				return this._START_DATE;
			}
			set
			{
				if ((this._START_DATE != value))
				{
					this.OnSTART_DATEChanging(value);
					this.SendPropertyChanging();
					this._START_DATE = value;
					this.SendPropertyChanged("START_DATE");
					this.OnSTART_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> END_DATE
		{
			get
			{
				return this._END_DATE;
			}
			set
			{
				if ((this._END_DATE != value))
				{
					this.OnEND_DATEChanging(value);
					this.SendPropertyChanging();
					this._END_DATE = value;
					this.SendPropertyChanged("END_DATE");
					this.OnEND_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_MANAGER_START", DbType="Int NOT NULL")]
		public int GROUP_MANAGER_START
		{
			get
			{
				return this._GROUP_MANAGER_START;
			}
			set
			{
				if ((this._GROUP_MANAGER_START != value))
				{
					if (this._GROUP_MANAGER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGROUP_MANAGER_STARTChanging(value);
					this.SendPropertyChanging();
					this._GROUP_MANAGER_START = value;
					this.SendPropertyChanged("GROUP_MANAGER_START");
					this.OnGROUP_MANAGER_STARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_NOTE", Storage="_NOTEs", ThisKey="EMPLOYEE_ID", OtherKey="UPDATED_BY_ID")]
		public EntitySet<NOTE> NOTEs
		{
			get
			{
				return this._NOTEs;
			}
			set
			{
				this._NOTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_SUPPORT_AREA", Storage="_SUPPORT_AREAs", ThisKey="EMPLOYEE_ID", OtherKey="DEVELOPER_ID")]
		public EntitySet<SUPPORT_AREA> SUPPORT_AREAs
		{
			get
			{
				return this._SUPPORT_AREAs;
			}
			set
			{
				this._SUPPORT_AREAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_SUPPORT_AREA1", Storage="_SUPPORT_AREAs1", ThisKey="EMPLOYEE_ID", OtherKey="SUPPORT_ID")]
		public EntitySet<SUPPORT_AREA> SUPPORT_AREAs1
		{
			get
			{
				return this._SUPPORT_AREAs1;
			}
			set
			{
				this._SUPPORT_AREAs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GROUP_MANAGER_EMPLOYEE", Storage="_GROUP_MANAGER", ThisKey="GROUP_MANAGER_START", OtherKey="GROUP_MANAGER_START", IsForeignKey=true)]
		public GROUP_MANAGER GROUP_MANAGER
		{
			get
			{
				return this._GROUP_MANAGER.Entity;
			}
			set
			{
				GROUP_MANAGER previousValue = this._GROUP_MANAGER.Entity;
				if (((previousValue != value) 
							|| (this._GROUP_MANAGER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GROUP_MANAGER.Entity = null;
						previousValue.EMPLOYEEs.Remove(this);
					}
					this._GROUP_MANAGER.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEEs.Add(this);
						this._GROUP_MANAGER_START = value.GROUP_MANAGER_START;
					}
					else
					{
						this._GROUP_MANAGER_START = default(int);
					}
					this.SendPropertyChanged("GROUP_MANAGER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NOTEs(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_NOTEs(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
		
		private void attach_SUPPORT_AREAs(SUPPORT_AREA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_SUPPORT_AREAs(SUPPORT_AREA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
		
		private void attach_SUPPORT_AREAs1(SUPPORT_AREA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE1 = this;
		}
		
		private void detach_SUPPORT_AREAs1(SUPPORT_AREA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.GROUP_lkp")]
	public partial class GROUP_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _GROUP_ID;
		
		private string _GROUP_TEXT;
		
		private EntitySet<GROUP_MANAGER> _GROUP_MANAGERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_IDChanging(short value);
    partial void OnGROUP_IDChanged();
    partial void OnGROUP_TEXTChanging(string value);
    partial void OnGROUP_TEXTChanged();
    #endregion
		
		public GROUP_lkp()
		{
			this._GROUP_MANAGERs = new EntitySet<GROUP_MANAGER>(new Action<GROUP_MANAGER>(this.attach_GROUP_MANAGERs), new Action<GROUP_MANAGER>(this.detach_GROUP_MANAGERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_TEXT", DbType="VarChar(50)")]
		public string GROUP_TEXT
		{
			get
			{
				return this._GROUP_TEXT;
			}
			set
			{
				if ((this._GROUP_TEXT != value))
				{
					this.OnGROUP_TEXTChanging(value);
					this.SendPropertyChanging();
					this._GROUP_TEXT = value;
					this.SendPropertyChanged("GROUP_TEXT");
					this.OnGROUP_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GROUP_lkp_GROUP_MANAGER", Storage="_GROUP_MANAGERs", ThisKey="GROUP_ID", OtherKey="GROUP_ID")]
		public EntitySet<GROUP_MANAGER> GROUP_MANAGERs
		{
			get
			{
				return this._GROUP_MANAGERs;
			}
			set
			{
				this._GROUP_MANAGERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GROUP_MANAGERs(GROUP_MANAGER entity)
		{
			this.SendPropertyChanging();
			entity.GROUP_lkp = this;
		}
		
		private void detach_GROUP_MANAGERs(GROUP_MANAGER entity)
		{
			this.SendPropertyChanging();
			entity.GROUP_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.GROUP_MANAGER")]
	public partial class GROUP_MANAGER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _GROUP_ID;
		
		private int _MANAGER_ID;
		
		private int _DIRECTOR_ID;
		
		private System.DateTime _START_DATE;
		
		private System.Nullable<System.DateTime> _END_DATE;
		
		private int _GROUP_MANAGER_START;
		
		private EntitySet<EMPLOYEE> _EMPLOYEEs;
		
		private EntityRef<DIRECTOR> _DIRECTOR;
		
		private EntityRef<GROUP_lkp> _GROUP_lkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_IDChanging(short value);
    partial void OnGROUP_IDChanged();
    partial void OnMANAGER_IDChanging(int value);
    partial void OnMANAGER_IDChanged();
    partial void OnDIRECTOR_IDChanging(int value);
    partial void OnDIRECTOR_IDChanged();
    partial void OnSTART_DATEChanging(System.DateTime value);
    partial void OnSTART_DATEChanged();
    partial void OnEND_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnEND_DATEChanged();
    partial void OnGROUP_MANAGER_STARTChanging(int value);
    partial void OnGROUP_MANAGER_STARTChanged();
    #endregion
		
		public GROUP_MANAGER()
		{
			this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
			this._DIRECTOR = default(EntityRef<DIRECTOR>);
			this._GROUP_lkp = default(EntityRef<GROUP_lkp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", DbType="SmallInt NOT NULL")]
		public short GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					if (this._GROUP_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_ID", DbType="Int NOT NULL")]
		public int MANAGER_ID
		{
			get
			{
				return this._MANAGER_ID;
			}
			set
			{
				if ((this._MANAGER_ID != value))
				{
					this.OnMANAGER_IDChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_ID = value;
					this.SendPropertyChanged("MANAGER_ID");
					this.OnMANAGER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECTOR_ID", DbType="Int NOT NULL")]
		public int DIRECTOR_ID
		{
			get
			{
				return this._DIRECTOR_ID;
			}
			set
			{
				if ((this._DIRECTOR_ID != value))
				{
					if (this._DIRECTOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDIRECTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._DIRECTOR_ID = value;
					this.SendPropertyChanged("DIRECTOR_ID");
					this.OnDIRECTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_DATE", DbType="Date NOT NULL")]
		public System.DateTime START_DATE
		{
			get
			{
				return this._START_DATE;
			}
			set
			{
				if ((this._START_DATE != value))
				{
					this.OnSTART_DATEChanging(value);
					this.SendPropertyChanging();
					this._START_DATE = value;
					this.SendPropertyChanged("START_DATE");
					this.OnSTART_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> END_DATE
		{
			get
			{
				return this._END_DATE;
			}
			set
			{
				if ((this._END_DATE != value))
				{
					this.OnEND_DATEChanging(value);
					this.SendPropertyChanging();
					this._END_DATE = value;
					this.SendPropertyChanged("END_DATE");
					this.OnEND_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_MANAGER_START", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GROUP_MANAGER_START
		{
			get
			{
				return this._GROUP_MANAGER_START;
			}
			set
			{
				if ((this._GROUP_MANAGER_START != value))
				{
					this.OnGROUP_MANAGER_STARTChanging(value);
					this.SendPropertyChanging();
					this._GROUP_MANAGER_START = value;
					this.SendPropertyChanged("GROUP_MANAGER_START");
					this.OnGROUP_MANAGER_STARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GROUP_MANAGER_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="GROUP_MANAGER_START", OtherKey="GROUP_MANAGER_START")]
		public EntitySet<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this._EMPLOYEEs;
			}
			set
			{
				this._EMPLOYEEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIRECTOR_GROUP_MANAGER", Storage="_DIRECTOR", ThisKey="DIRECTOR_ID", OtherKey="DIRECTOR_ID", IsForeignKey=true)]
		public DIRECTOR DIRECTOR
		{
			get
			{
				return this._DIRECTOR.Entity;
			}
			set
			{
				DIRECTOR previousValue = this._DIRECTOR.Entity;
				if (((previousValue != value) 
							|| (this._DIRECTOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIRECTOR.Entity = null;
						previousValue.GROUP_MANAGERs.Remove(this);
					}
					this._DIRECTOR.Entity = value;
					if ((value != null))
					{
						value.GROUP_MANAGERs.Add(this);
						this._DIRECTOR_ID = value.DIRECTOR_ID;
					}
					else
					{
						this._DIRECTOR_ID = default(int);
					}
					this.SendPropertyChanged("DIRECTOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GROUP_lkp_GROUP_MANAGER", Storage="_GROUP_lkp", ThisKey="GROUP_ID", OtherKey="GROUP_ID", IsForeignKey=true)]
		public GROUP_lkp GROUP_lkp
		{
			get
			{
				return this._GROUP_lkp.Entity;
			}
			set
			{
				GROUP_lkp previousValue = this._GROUP_lkp.Entity;
				if (((previousValue != value) 
							|| (this._GROUP_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GROUP_lkp.Entity = null;
						previousValue.GROUP_MANAGERs.Remove(this);
					}
					this._GROUP_lkp.Entity = value;
					if ((value != null))
					{
						value.GROUP_MANAGERs.Add(this);
						this._GROUP_ID = value.GROUP_ID;
					}
					else
					{
						this._GROUP_ID = default(short);
					}
					this.SendPropertyChanged("GROUP_lkp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.GROUP_MANAGER = this;
		}
		
		private void detach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.GROUP_MANAGER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.NOTE")]
	public partial class NOTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NOTE_ID;
		
		private int _ELEMENT_ID;
		
		private System.DateTime _NOTE_DATE;
		
		private string _NOTE_TEXT;
		
		private int _UPDATED_BY_ID;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<ELEMENT> _ELEMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNOTE_IDChanging(int value);
    partial void OnNOTE_IDChanged();
    partial void OnELEMENT_IDChanging(int value);
    partial void OnELEMENT_IDChanged();
    partial void OnNOTE_DATEChanging(System.DateTime value);
    partial void OnNOTE_DATEChanged();
    partial void OnNOTE_TEXTChanging(string value);
    partial void OnNOTE_TEXTChanged();
    partial void OnUPDATED_BY_IDChanging(int value);
    partial void OnUPDATED_BY_IDChanged();
    #endregion
		
		public NOTE()
		{
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._ELEMENT = default(EntityRef<ELEMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NOTE_ID
		{
			get
			{
				return this._NOTE_ID;
			}
			set
			{
				if ((this._NOTE_ID != value))
				{
					this.OnNOTE_IDChanging(value);
					this.SendPropertyChanging();
					this._NOTE_ID = value;
					this.SendPropertyChanged("NOTE_ID");
					this.OnNOTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELEMENT_ID", DbType="Int NOT NULL")]
		public int ELEMENT_ID
		{
			get
			{
				return this._ELEMENT_ID;
			}
			set
			{
				if ((this._ELEMENT_ID != value))
				{
					if (this._ELEMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnELEMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._ELEMENT_ID = value;
					this.SendPropertyChanged("ELEMENT_ID");
					this.OnELEMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE_DATE", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NOTE_DATE
		{
			get
			{
				return this._NOTE_DATE;
			}
			set
			{
				if ((this._NOTE_DATE != value))
				{
					this.OnNOTE_DATEChanging(value);
					this.SendPropertyChanging();
					this._NOTE_DATE = value;
					this.SendPropertyChanged("NOTE_DATE");
					this.OnNOTE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE_TEXT", DbType="VarChar(500)")]
		public string NOTE_TEXT
		{
			get
			{
				return this._NOTE_TEXT;
			}
			set
			{
				if ((this._NOTE_TEXT != value))
				{
					this.OnNOTE_TEXTChanging(value);
					this.SendPropertyChanging();
					this._NOTE_TEXT = value;
					this.SendPropertyChanged("NOTE_TEXT");
					this.OnNOTE_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATED_BY_ID", DbType="Int NOT NULL")]
		public int UPDATED_BY_ID
		{
			get
			{
				return this._UPDATED_BY_ID;
			}
			set
			{
				if ((this._UPDATED_BY_ID != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUPDATED_BY_IDChanging(value);
					this.SendPropertyChanging();
					this._UPDATED_BY_ID = value;
					this.SendPropertyChanged("UPDATED_BY_ID");
					this.OnUPDATED_BY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_NOTE", Storage="_EMPLOYEE", ThisKey="UPDATED_BY_ID", OtherKey="EMPLOYEE_ID", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.NOTEs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.NOTEs.Add(this);
						this._UPDATED_BY_ID = value.EMPLOYEE_ID;
					}
					else
					{
						this._UPDATED_BY_ID = default(int);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_NOTE", Storage="_ELEMENT", ThisKey="ELEMENT_ID", OtherKey="ELEMENT_ID", IsForeignKey=true)]
		public ELEMENT ELEMENT
		{
			get
			{
				return this._ELEMENT.Entity;
			}
			set
			{
				ELEMENT previousValue = this._ELEMENT.Entity;
				if (((previousValue != value) 
							|| (this._ELEMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELEMENT.Entity = null;
						previousValue.NOTEs.Remove(this);
					}
					this._ELEMENT.Entity = value;
					if ((value != null))
					{
						value.NOTEs.Add(this);
						this._ELEMENT_ID = value.ELEMENT_ID;
					}
					else
					{
						this._ELEMENT_ID = default(int);
					}
					this.SendPropertyChanged("ELEMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.PROGRAM")]
	public partial class PROGRAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _PROGRAM_ID;
		
		private string _PROGRAM_NAME;
		
		private EntitySet<REQUEST> _REQUESTs;
		
		private EntitySet<PROJECT> _PROJECTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROGRAM_IDChanging(short value);
    partial void OnPROGRAM_IDChanged();
    partial void OnPROGRAM_NAMEChanging(string value);
    partial void OnPROGRAM_NAMEChanged();
    #endregion
		
		public PROGRAM()
		{
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			this._PROJECTs = new EntitySet<PROJECT>(new Action<PROJECT>(this.attach_PROJECTs), new Action<PROJECT>(this.detach_PROJECTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROGRAM_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short PROGRAM_ID
		{
			get
			{
				return this._PROGRAM_ID;
			}
			set
			{
				if ((this._PROGRAM_ID != value))
				{
					this.OnPROGRAM_IDChanging(value);
					this.SendPropertyChanging();
					this._PROGRAM_ID = value;
					this.SendPropertyChanged("PROGRAM_ID");
					this.OnPROGRAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROGRAM_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PROGRAM_NAME
		{
			get
			{
				return this._PROGRAM_NAME;
			}
			set
			{
				if ((this._PROGRAM_NAME != value))
				{
					this.OnPROGRAM_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PROGRAM_NAME = value;
					this.SendPropertyChanged("PROGRAM_NAME");
					this.OnPROGRAM_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROGRAM_REQUEST", Storage="_REQUESTs", ThisKey="PROGRAM_ID", OtherKey="PROGRAM_ID")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROGRAM_PROJECT", Storage="_PROJECTs", ThisKey="PROGRAM_ID", OtherKey="PROGRAM_ID")]
		public EntitySet<PROJECT> PROJECTs
		{
			get
			{
				return this._PROJECTs;
			}
			set
			{
				this._PROJECTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PROGRAM = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PROGRAM = null;
		}
		
		private void attach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.PROGRAM = this;
		}
		
		private void detach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.PROGRAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.PROJECT_STATUS")]
	public partial class PROJECT_STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _PROJECT_STATUS_ID;
		
		private string _PROJECT_STATUS_TEXT;
		
		private byte _SORT_ORDER;
		
		private EntitySet<PROJECT> _PROJECTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROJECT_STATUS_IDChanging(byte value);
    partial void OnPROJECT_STATUS_IDChanged();
    partial void OnPROJECT_STATUS_TEXTChanging(string value);
    partial void OnPROJECT_STATUS_TEXTChanged();
    partial void OnSORT_ORDERChanging(byte value);
    partial void OnSORT_ORDERChanged();
    #endregion
		
		public PROJECT_STATUS()
		{
			this._PROJECTs = new EntitySet<PROJECT>(new Action<PROJECT>(this.attach_PROJECTs), new Action<PROJECT>(this.detach_PROJECTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_STATUS_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte PROJECT_STATUS_ID
		{
			get
			{
				return this._PROJECT_STATUS_ID;
			}
			set
			{
				if ((this._PROJECT_STATUS_ID != value))
				{
					this.OnPROJECT_STATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_STATUS_ID = value;
					this.SendPropertyChanged("PROJECT_STATUS_ID");
					this.OnPROJECT_STATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_STATUS_TEXT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PROJECT_STATUS_TEXT
		{
			get
			{
				return this._PROJECT_STATUS_TEXT;
			}
			set
			{
				if ((this._PROJECT_STATUS_TEXT != value))
				{
					this.OnPROJECT_STATUS_TEXTChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_STATUS_TEXT = value;
					this.SendPropertyChanged("PROJECT_STATUS_TEXT");
					this.OnPROJECT_STATUS_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SORT_ORDER", DbType="TinyInt NOT NULL")]
		public byte SORT_ORDER
		{
			get
			{
				return this._SORT_ORDER;
			}
			set
			{
				if ((this._SORT_ORDER != value))
				{
					this.OnSORT_ORDERChanging(value);
					this.SendPropertyChanging();
					this._SORT_ORDER = value;
					this.SendPropertyChanged("SORT_ORDER");
					this.OnSORT_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROJECT_STATUS_PROJECT", Storage="_PROJECTs", ThisKey="PROJECT_STATUS_ID", OtherKey="PROJECT_STATUS_ID")]
		public EntitySet<PROJECT> PROJECTs
		{
			get
			{
				return this._PROJECTs;
			}
			set
			{
				this._PROJECTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_STATUS = this;
		}
		
		private void detach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_STATUS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.REQUEST_STATUS")]
	public partial class REQUEST_STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _REQUEST_STATUS_ID;
		
		private string _REQUEST_STATUS_TEXT;
		
		private byte _SORT_ORDER;
		
		private EntitySet<REQUEST> _REQUESTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREQUEST_STATUS_IDChanging(byte value);
    partial void OnREQUEST_STATUS_IDChanged();
    partial void OnREQUEST_STATUS_TEXTChanging(string value);
    partial void OnREQUEST_STATUS_TEXTChanged();
    partial void OnSORT_ORDERChanging(byte value);
    partial void OnSORT_ORDERChanged();
    #endregion
		
		public REQUEST_STATUS()
		{
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_STATUS_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte REQUEST_STATUS_ID
		{
			get
			{
				return this._REQUEST_STATUS_ID;
			}
			set
			{
				if ((this._REQUEST_STATUS_ID != value))
				{
					this.OnREQUEST_STATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_STATUS_ID = value;
					this.SendPropertyChanged("REQUEST_STATUS_ID");
					this.OnREQUEST_STATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_STATUS_TEXT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string REQUEST_STATUS_TEXT
		{
			get
			{
				return this._REQUEST_STATUS_TEXT;
			}
			set
			{
				if ((this._REQUEST_STATUS_TEXT != value))
				{
					this.OnREQUEST_STATUS_TEXTChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_STATUS_TEXT = value;
					this.SendPropertyChanged("REQUEST_STATUS_TEXT");
					this.OnREQUEST_STATUS_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SORT_ORDER", DbType="TinyInt NOT NULL")]
		public byte SORT_ORDER
		{
			get
			{
				return this._SORT_ORDER;
			}
			set
			{
				if ((this._SORT_ORDER != value))
				{
					this.OnSORT_ORDERChanging(value);
					this.SendPropertyChanging();
					this._SORT_ORDER = value;
					this.SendPropertyChanged("SORT_ORDER");
					this.OnSORT_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_STATUS_REQUEST", Storage="_REQUESTs", ThisKey="REQUEST_STATUS_ID", OtherKey="REQUEST_STATUS_ID")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST_STATUS = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST_STATUS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.BUSINESS_TYPE")]
	public partial class BUSINESS_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _BUSINESS_TYPE_ID;
		
		private string _BUSINESS_TYPE_TEXT;
		
		private short _BUSINESS_OWNER_ID;
		
		private EntitySet<SUPPORT_AREA> _SUPPORT_AREAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBUSINESS_TYPE_IDChanging(short value);
    partial void OnBUSINESS_TYPE_IDChanged();
    partial void OnBUSINESS_TYPE_TEXTChanging(string value);
    partial void OnBUSINESS_TYPE_TEXTChanged();
    partial void OnBUSINESS_OWNER_IDChanging(short value);
    partial void OnBUSINESS_OWNER_IDChanged();
    #endregion
		
		public BUSINESS_TYPE()
		{
			this._SUPPORT_AREAs = new EntitySet<SUPPORT_AREA>(new Action<SUPPORT_AREA>(this.attach_SUPPORT_AREAs), new Action<SUPPORT_AREA>(this.detach_SUPPORT_AREAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUSINESS_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short BUSINESS_TYPE_ID
		{
			get
			{
				return this._BUSINESS_TYPE_ID;
			}
			set
			{
				if ((this._BUSINESS_TYPE_ID != value))
				{
					this.OnBUSINESS_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_TYPE_ID = value;
					this.SendPropertyChanged("BUSINESS_TYPE_ID");
					this.OnBUSINESS_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUSINESS_TYPE_TEXT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BUSINESS_TYPE_TEXT
		{
			get
			{
				return this._BUSINESS_TYPE_TEXT;
			}
			set
			{
				if ((this._BUSINESS_TYPE_TEXT != value))
				{
					this.OnBUSINESS_TYPE_TEXTChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_TYPE_TEXT = value;
					this.SendPropertyChanged("BUSINESS_TYPE_TEXT");
					this.OnBUSINESS_TYPE_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUSINESS_OWNER_ID", DbType="SmallInt NOT NULL")]
		public short BUSINESS_OWNER_ID
		{
			get
			{
				return this._BUSINESS_OWNER_ID;
			}
			set
			{
				if ((this._BUSINESS_OWNER_ID != value))
				{
					this.OnBUSINESS_OWNER_IDChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_OWNER_ID = value;
					this.SendPropertyChanged("BUSINESS_OWNER_ID");
					this.OnBUSINESS_OWNER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUSINESS_TYPE_SUPPORT_AREA", Storage="_SUPPORT_AREAs", ThisKey="BUSINESS_TYPE_ID", OtherKey="BUSINESS_TYPE_ID")]
		public EntitySet<SUPPORT_AREA> SUPPORT_AREAs
		{
			get
			{
				return this._SUPPORT_AREAs;
			}
			set
			{
				this._SUPPORT_AREAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SUPPORT_AREAs(SUPPORT_AREA entity)
		{
			this.SendPropertyChanging();
			entity.BUSINESS_TYPE = this;
		}
		
		private void detach_SUPPORT_AREAs(SUPPORT_AREA entity)
		{
			this.SendPropertyChanging();
			entity.BUSINESS_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.SUPPORT_AREA")]
	public partial class SUPPORT_AREA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _SUPPORT_AREA_ID;
		
		private string _SUPPORT_AREA_TEXT;
		
		private short _SUPPORT_UNIT_ID;
		
		private System.Nullable<short> _BUSINESS_TYPE_ID;
		
		private System.Nullable<int> _SUPPORT_ID;
		
		private System.Nullable<int> _DEVELOPER_ID;
		
		private EntitySet<REQUEST> _REQUESTs;
		
		private EntitySet<PROJECT> _PROJECTs;
		
		private EntityRef<BUSINESS_TYPE> _BUSINESS_TYPE;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE1;
		
		private EntityRef<SUPPORT_UNIT> _SUPPORT_UNIT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUPPORT_AREA_IDChanging(short value);
    partial void OnSUPPORT_AREA_IDChanged();
    partial void OnSUPPORT_AREA_TEXTChanging(string value);
    partial void OnSUPPORT_AREA_TEXTChanged();
    partial void OnSUPPORT_UNIT_IDChanging(short value);
    partial void OnSUPPORT_UNIT_IDChanged();
    partial void OnBUSINESS_TYPE_IDChanging(System.Nullable<short> value);
    partial void OnBUSINESS_TYPE_IDChanged();
    partial void OnSUPPORT_IDChanging(System.Nullable<int> value);
    partial void OnSUPPORT_IDChanged();
    partial void OnDEVELOPER_IDChanging(System.Nullable<int> value);
    partial void OnDEVELOPER_IDChanged();
    #endregion
		
		public SUPPORT_AREA()
		{
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			this._PROJECTs = new EntitySet<PROJECT>(new Action<PROJECT>(this.attach_PROJECTs), new Action<PROJECT>(this.detach_PROJECTs));
			this._BUSINESS_TYPE = default(EntityRef<BUSINESS_TYPE>);
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._EMPLOYEE1 = default(EntityRef<EMPLOYEE>);
			this._SUPPORT_UNIT = default(EntityRef<SUPPORT_UNIT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_AREA_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short SUPPORT_AREA_ID
		{
			get
			{
				return this._SUPPORT_AREA_ID;
			}
			set
			{
				if ((this._SUPPORT_AREA_ID != value))
				{
					this.OnSUPPORT_AREA_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPORT_AREA_ID = value;
					this.SendPropertyChanged("SUPPORT_AREA_ID");
					this.OnSUPPORT_AREA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_AREA_TEXT", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SUPPORT_AREA_TEXT
		{
			get
			{
				return this._SUPPORT_AREA_TEXT;
			}
			set
			{
				if ((this._SUPPORT_AREA_TEXT != value))
				{
					this.OnSUPPORT_AREA_TEXTChanging(value);
					this.SendPropertyChanging();
					this._SUPPORT_AREA_TEXT = value;
					this.SendPropertyChanged("SUPPORT_AREA_TEXT");
					this.OnSUPPORT_AREA_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_UNIT_ID", DbType="SmallInt NOT NULL")]
		public short SUPPORT_UNIT_ID
		{
			get
			{
				return this._SUPPORT_UNIT_ID;
			}
			set
			{
				if ((this._SUPPORT_UNIT_ID != value))
				{
					if (this._SUPPORT_UNIT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPORT_UNIT_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPORT_UNIT_ID = value;
					this.SendPropertyChanged("SUPPORT_UNIT_ID");
					this.OnSUPPORT_UNIT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUSINESS_TYPE_ID", DbType="SmallInt")]
		public System.Nullable<short> BUSINESS_TYPE_ID
		{
			get
			{
				return this._BUSINESS_TYPE_ID;
			}
			set
			{
				if ((this._BUSINESS_TYPE_ID != value))
				{
					if (this._BUSINESS_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBUSINESS_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._BUSINESS_TYPE_ID = value;
					this.SendPropertyChanged("BUSINESS_TYPE_ID");
					this.OnBUSINESS_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_ID", DbType="Int")]
		public System.Nullable<int> SUPPORT_ID
		{
			get
			{
				return this._SUPPORT_ID;
			}
			set
			{
				if ((this._SUPPORT_ID != value))
				{
					if (this._EMPLOYEE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPORT_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPORT_ID = value;
					this.SendPropertyChanged("SUPPORT_ID");
					this.OnSUPPORT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVELOPER_ID", DbType="Int")]
		public System.Nullable<int> DEVELOPER_ID
		{
			get
			{
				return this._DEVELOPER_ID;
			}
			set
			{
				if ((this._DEVELOPER_ID != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEVELOPER_IDChanging(value);
					this.SendPropertyChanging();
					this._DEVELOPER_ID = value;
					this.SendPropertyChanged("DEVELOPER_ID");
					this.OnDEVELOPER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPORT_AREA_REQUEST", Storage="_REQUESTs", ThisKey="SUPPORT_AREA_ID", OtherKey="SUPPORT_AREA_ID")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPORT_AREA_PROJECT", Storage="_PROJECTs", ThisKey="SUPPORT_AREA_ID", OtherKey="SUPPORT_AREA_ID")]
		public EntitySet<PROJECT> PROJECTs
		{
			get
			{
				return this._PROJECTs;
			}
			set
			{
				this._PROJECTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUSINESS_TYPE_SUPPORT_AREA", Storage="_BUSINESS_TYPE", ThisKey="BUSINESS_TYPE_ID", OtherKey="BUSINESS_TYPE_ID", IsForeignKey=true)]
		public BUSINESS_TYPE BUSINESS_TYPE
		{
			get
			{
				return this._BUSINESS_TYPE.Entity;
			}
			set
			{
				BUSINESS_TYPE previousValue = this._BUSINESS_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._BUSINESS_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUSINESS_TYPE.Entity = null;
						previousValue.SUPPORT_AREAs.Remove(this);
					}
					this._BUSINESS_TYPE.Entity = value;
					if ((value != null))
					{
						value.SUPPORT_AREAs.Add(this);
						this._BUSINESS_TYPE_ID = value.BUSINESS_TYPE_ID;
					}
					else
					{
						this._BUSINESS_TYPE_ID = default(Nullable<short>);
					}
					this.SendPropertyChanged("BUSINESS_TYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_SUPPORT_AREA", Storage="_EMPLOYEE", ThisKey="DEVELOPER_ID", OtherKey="EMPLOYEE_ID", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.SUPPORT_AREAs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.SUPPORT_AREAs.Add(this);
						this._DEVELOPER_ID = value.EMPLOYEE_ID;
					}
					else
					{
						this._DEVELOPER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_SUPPORT_AREA1", Storage="_EMPLOYEE1", ThisKey="SUPPORT_ID", OtherKey="EMPLOYEE_ID", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE1
		{
			get
			{
				return this._EMPLOYEE1.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE1.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE1.Entity = null;
						previousValue.SUPPORT_AREAs1.Remove(this);
					}
					this._EMPLOYEE1.Entity = value;
					if ((value != null))
					{
						value.SUPPORT_AREAs1.Add(this);
						this._SUPPORT_ID = value.EMPLOYEE_ID;
					}
					else
					{
						this._SUPPORT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EMPLOYEE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPORT_UNIT_SUPPORT_AREA", Storage="_SUPPORT_UNIT", ThisKey="SUPPORT_UNIT_ID", OtherKey="SUPPORT_UNIT_ID", IsForeignKey=true)]
		public SUPPORT_UNIT SUPPORT_UNIT
		{
			get
			{
				return this._SUPPORT_UNIT.Entity;
			}
			set
			{
				SUPPORT_UNIT previousValue = this._SUPPORT_UNIT.Entity;
				if (((previousValue != value) 
							|| (this._SUPPORT_UNIT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUPPORT_UNIT.Entity = null;
						previousValue.SUPPORT_AREAs.Remove(this);
					}
					this._SUPPORT_UNIT.Entity = value;
					if ((value != null))
					{
						value.SUPPORT_AREAs.Add(this);
						this._SUPPORT_UNIT_ID = value.SUPPORT_UNIT_ID;
					}
					else
					{
						this._SUPPORT_UNIT_ID = default(short);
					}
					this.SendPropertyChanged("SUPPORT_UNIT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.SUPPORT_AREA = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.SUPPORT_AREA = null;
		}
		
		private void attach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.SUPPORT_AREA = this;
		}
		
		private void detach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.SUPPORT_AREA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.SUPPORT_UNIT")]
	public partial class SUPPORT_UNIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _SUPPORT_UNIT_ID;
		
		private string _SUPPORT_UNIT_TEXT;
		
		private EntitySet<SUPPORT_AREA> _SUPPORT_AREAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSUPPORT_UNIT_IDChanging(short value);
    partial void OnSUPPORT_UNIT_IDChanged();
    partial void OnSUPPORT_UNIT_TEXTChanging(string value);
    partial void OnSUPPORT_UNIT_TEXTChanged();
    #endregion
		
		public SUPPORT_UNIT()
		{
			this._SUPPORT_AREAs = new EntitySet<SUPPORT_AREA>(new Action<SUPPORT_AREA>(this.attach_SUPPORT_AREAs), new Action<SUPPORT_AREA>(this.detach_SUPPORT_AREAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_UNIT_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short SUPPORT_UNIT_ID
		{
			get
			{
				return this._SUPPORT_UNIT_ID;
			}
			set
			{
				if ((this._SUPPORT_UNIT_ID != value))
				{
					this.OnSUPPORT_UNIT_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPORT_UNIT_ID = value;
					this.SendPropertyChanged("SUPPORT_UNIT_ID");
					this.OnSUPPORT_UNIT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_UNIT_TEXT", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string SUPPORT_UNIT_TEXT
		{
			get
			{
				return this._SUPPORT_UNIT_TEXT;
			}
			set
			{
				if ((this._SUPPORT_UNIT_TEXT != value))
				{
					this.OnSUPPORT_UNIT_TEXTChanging(value);
					this.SendPropertyChanging();
					this._SUPPORT_UNIT_TEXT = value;
					this.SendPropertyChanged("SUPPORT_UNIT_TEXT");
					this.OnSUPPORT_UNIT_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPORT_UNIT_SUPPORT_AREA", Storage="_SUPPORT_AREAs", ThisKey="SUPPORT_UNIT_ID", OtherKey="SUPPORT_UNIT_ID")]
		public EntitySet<SUPPORT_AREA> SUPPORT_AREAs
		{
			get
			{
				return this._SUPPORT_AREAs;
			}
			set
			{
				this._SUPPORT_AREAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SUPPORT_AREAs(SUPPORT_AREA entity)
		{
			this.SendPropertyChanging();
			entity.SUPPORT_UNIT = this;
		}
		
		private void detach_SUPPORT_AREAs(SUPPORT_AREA entity)
		{
			this.SendPropertyChanging();
			entity.SUPPORT_UNIT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.REQUEST")]
	public partial class REQUEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _REQUEST_ID;
		
		private System.Nullable<int> _ASSIGNED_TO_ID;
		
		private int _SUBMITTED_BY_ID;
		
		private int _REQUESTED_BY_ID;
		
		private short _REQUEST_TYPE_ID;
		
		private short _REQUEST_CATEGORY_ID;
		
		private System.Nullable<short> _SUPPORT_AREA_ID;
		
		private System.Nullable<int> _PARENT_PROJECT_ID;
		
		private System.Nullable<short> _PROGRAM_ID;
		
		private short _VALUE_DRIVER_ID;
		
		private byte _REQUEST_STATUS_ID;
		
		private System.DateTime _SUBMITTED_DATE;
		
		private System.DateTime _REQUESTED_DUE_DATE;
		
		private System.Nullable<System.DateTime> _ESTIMATED_DUE_DATE;
		
		private System.Nullable<System.DateTime> _MANAGER_QUEUE_DATE;
		
		private System.Nullable<System.DateTime> _MANAGER_APPROVED_DATE;
		
		private System.Nullable<System.DateTime> _HOLD_DATE;
		
		private System.Nullable<System.DateTime> _RESUME_DATE;
		
		private System.Nullable<System.DateTime> _CLOSED_DATE;
		
		private System.DateTime _LAST_UPDATED_DATE;
		
		private System.Nullable<decimal> _ESTIMATED_HOURS;
		
		private System.Nullable<decimal> _VALUE;
		
		private System.Nullable<decimal> _ESTIMATED_COST;
		
		private System.Nullable<decimal> _ACTUAL_COST;
		
		private string _REQUEST_SUMMARY;
		
		private string _REQUEST_DESCRIPTION;
		
		private string _RESOLUTION;
		
		private string _VALUE_REASON;
		
		private string _IT_FEATURE;
		
		private string _TOP_OFFNET_ATTRIBUTE_NUMBER;
		
		private string _MANAGER_NOTE;
		
		private EntitySet<ELEMENT> _ELEMENTs;
		
		private EntityRef<PROGRAM> _PROGRAM;
		
		private EntityRef<REQUEST_STATUS> _REQUEST_STATUS;
		
		private EntityRef<SUPPORT_AREA> _SUPPORT_AREA;
		
		private EntityRef<REQUEST_TYPE> _REQUEST_TYPE;
		
		private EntityRef<REQUEST_CATEGORY> _REQUEST_CATEGORY;
		
		private EntityRef<VALUE_DRIVER> _VALUE_DRIVER;
		
		private EntityRef<PROJECT> _PROJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREQUEST_IDChanging(int value);
    partial void OnREQUEST_IDChanged();
    partial void OnASSIGNED_TO_IDChanging(System.Nullable<int> value);
    partial void OnASSIGNED_TO_IDChanged();
    partial void OnSUBMITTED_BY_IDChanging(int value);
    partial void OnSUBMITTED_BY_IDChanged();
    partial void OnREQUESTED_BY_IDChanging(int value);
    partial void OnREQUESTED_BY_IDChanged();
    partial void OnREQUEST_TYPE_IDChanging(short value);
    partial void OnREQUEST_TYPE_IDChanged();
    partial void OnREQUEST_CATEGORY_IDChanging(short value);
    partial void OnREQUEST_CATEGORY_IDChanged();
    partial void OnSUPPORT_AREA_IDChanging(System.Nullable<short> value);
    partial void OnSUPPORT_AREA_IDChanged();
    partial void OnPARENT_PROJECT_IDChanging(System.Nullable<int> value);
    partial void OnPARENT_PROJECT_IDChanged();
    partial void OnPROGRAM_IDChanging(System.Nullable<short> value);
    partial void OnPROGRAM_IDChanged();
    partial void OnVALUE_DRIVER_IDChanging(short value);
    partial void OnVALUE_DRIVER_IDChanged();
    partial void OnREQUEST_STATUS_IDChanging(byte value);
    partial void OnREQUEST_STATUS_IDChanged();
    partial void OnSUBMITTED_DATEChanging(System.DateTime value);
    partial void OnSUBMITTED_DATEChanged();
    partial void OnREQUESTED_DUE_DATEChanging(System.DateTime value);
    partial void OnREQUESTED_DUE_DATEChanged();
    partial void OnESTIMATED_DUE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnESTIMATED_DUE_DATEChanged();
    partial void OnMANAGER_QUEUE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMANAGER_QUEUE_DATEChanged();
    partial void OnMANAGER_APPROVED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMANAGER_APPROVED_DATEChanged();
    partial void OnHOLD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnHOLD_DATEChanged();
    partial void OnRESUME_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRESUME_DATEChanged();
    partial void OnCLOSED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCLOSED_DATEChanged();
    partial void OnLAST_UPDATED_DATEChanging(System.DateTime value);
    partial void OnLAST_UPDATED_DATEChanged();
    partial void OnESTIMATED_HOURSChanging(System.Nullable<decimal> value);
    partial void OnESTIMATED_HOURSChanged();
    partial void OnVALUEChanging(System.Nullable<decimal> value);
    partial void OnVALUEChanged();
    partial void OnESTIMATED_COSTChanging(System.Nullable<decimal> value);
    partial void OnESTIMATED_COSTChanged();
    partial void OnACTUAL_COSTChanging(System.Nullable<decimal> value);
    partial void OnACTUAL_COSTChanged();
    partial void OnREQUEST_SUMMARYChanging(string value);
    partial void OnREQUEST_SUMMARYChanged();
    partial void OnREQUEST_DESCRIPTIONChanging(string value);
    partial void OnREQUEST_DESCRIPTIONChanged();
    partial void OnRESOLUTIONChanging(string value);
    partial void OnRESOLUTIONChanged();
    partial void OnVALUE_REASONChanging(string value);
    partial void OnVALUE_REASONChanged();
    partial void OnIT_FEATUREChanging(string value);
    partial void OnIT_FEATUREChanged();
    partial void OnTOP_OFFNET_ATTRIBUTE_NUMBERChanging(string value);
    partial void OnTOP_OFFNET_ATTRIBUTE_NUMBERChanged();
    partial void OnMANAGER_NOTEChanging(string value);
    partial void OnMANAGER_NOTEChanged();
    #endregion
		
		public REQUEST()
		{
			this._ELEMENTs = new EntitySet<ELEMENT>(new Action<ELEMENT>(this.attach_ELEMENTs), new Action<ELEMENT>(this.detach_ELEMENTs));
			this._PROGRAM = default(EntityRef<PROGRAM>);
			this._REQUEST_STATUS = default(EntityRef<REQUEST_STATUS>);
			this._SUPPORT_AREA = default(EntityRef<SUPPORT_AREA>);
			this._REQUEST_TYPE = default(EntityRef<REQUEST_TYPE>);
			this._REQUEST_CATEGORY = default(EntityRef<REQUEST_CATEGORY>);
			this._VALUE_DRIVER = default(EntityRef<VALUE_DRIVER>);
			this._PROJECT = default(EntityRef<PROJECT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int REQUEST_ID
		{
			get
			{
				return this._REQUEST_ID;
			}
			set
			{
				if ((this._REQUEST_ID != value))
				{
					this.OnREQUEST_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_ID = value;
					this.SendPropertyChanged("REQUEST_ID");
					this.OnREQUEST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASSIGNED_TO_ID", DbType="Int")]
		public System.Nullable<int> ASSIGNED_TO_ID
		{
			get
			{
				return this._ASSIGNED_TO_ID;
			}
			set
			{
				if ((this._ASSIGNED_TO_ID != value))
				{
					this.OnASSIGNED_TO_IDChanging(value);
					this.SendPropertyChanging();
					this._ASSIGNED_TO_ID = value;
					this.SendPropertyChanged("ASSIGNED_TO_ID");
					this.OnASSIGNED_TO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBMITTED_BY_ID", DbType="Int NOT NULL")]
		public int SUBMITTED_BY_ID
		{
			get
			{
				return this._SUBMITTED_BY_ID;
			}
			set
			{
				if ((this._SUBMITTED_BY_ID != value))
				{
					this.OnSUBMITTED_BY_IDChanging(value);
					this.SendPropertyChanging();
					this._SUBMITTED_BY_ID = value;
					this.SendPropertyChanged("SUBMITTED_BY_ID");
					this.OnSUBMITTED_BY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUESTED_BY_ID", DbType="Int NOT NULL")]
		public int REQUESTED_BY_ID
		{
			get
			{
				return this._REQUESTED_BY_ID;
			}
			set
			{
				if ((this._REQUESTED_BY_ID != value))
				{
					this.OnREQUESTED_BY_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUESTED_BY_ID = value;
					this.SendPropertyChanged("REQUESTED_BY_ID");
					this.OnREQUESTED_BY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_TYPE_ID", DbType="SmallInt NOT NULL")]
		public short REQUEST_TYPE_ID
		{
			get
			{
				return this._REQUEST_TYPE_ID;
			}
			set
			{
				if ((this._REQUEST_TYPE_ID != value))
				{
					if (this._REQUEST_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnREQUEST_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_TYPE_ID = value;
					this.SendPropertyChanged("REQUEST_TYPE_ID");
					this.OnREQUEST_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_CATEGORY_ID", DbType="SmallInt NOT NULL")]
		public short REQUEST_CATEGORY_ID
		{
			get
			{
				return this._REQUEST_CATEGORY_ID;
			}
			set
			{
				if ((this._REQUEST_CATEGORY_ID != value))
				{
					if (this._REQUEST_CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnREQUEST_CATEGORY_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_CATEGORY_ID = value;
					this.SendPropertyChanged("REQUEST_CATEGORY_ID");
					this.OnREQUEST_CATEGORY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_AREA_ID", DbType="SmallInt")]
		public System.Nullable<short> SUPPORT_AREA_ID
		{
			get
			{
				return this._SUPPORT_AREA_ID;
			}
			set
			{
				if ((this._SUPPORT_AREA_ID != value))
				{
					if (this._SUPPORT_AREA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPORT_AREA_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPORT_AREA_ID = value;
					this.SendPropertyChanged("SUPPORT_AREA_ID");
					this.OnSUPPORT_AREA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENT_PROJECT_ID", DbType="Int")]
		public System.Nullable<int> PARENT_PROJECT_ID
		{
			get
			{
				return this._PARENT_PROJECT_ID;
			}
			set
			{
				if ((this._PARENT_PROJECT_ID != value))
				{
					if (this._PROJECT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPARENT_PROJECT_IDChanging(value);
					this.SendPropertyChanging();
					this._PARENT_PROJECT_ID = value;
					this.SendPropertyChanged("PARENT_PROJECT_ID");
					this.OnPARENT_PROJECT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROGRAM_ID", DbType="SmallInt")]
		public System.Nullable<short> PROGRAM_ID
		{
			get
			{
				return this._PROGRAM_ID;
			}
			set
			{
				if ((this._PROGRAM_ID != value))
				{
					if (this._PROGRAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROGRAM_IDChanging(value);
					this.SendPropertyChanging();
					this._PROGRAM_ID = value;
					this.SendPropertyChanged("PROGRAM_ID");
					this.OnPROGRAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE_DRIVER_ID", DbType="SmallInt NOT NULL")]
		public short VALUE_DRIVER_ID
		{
			get
			{
				return this._VALUE_DRIVER_ID;
			}
			set
			{
				if ((this._VALUE_DRIVER_ID != value))
				{
					if (this._VALUE_DRIVER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVALUE_DRIVER_IDChanging(value);
					this.SendPropertyChanging();
					this._VALUE_DRIVER_ID = value;
					this.SendPropertyChanged("VALUE_DRIVER_ID");
					this.OnVALUE_DRIVER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_STATUS_ID", DbType="TinyInt NOT NULL")]
		public byte REQUEST_STATUS_ID
		{
			get
			{
				return this._REQUEST_STATUS_ID;
			}
			set
			{
				if ((this._REQUEST_STATUS_ID != value))
				{
					if (this._REQUEST_STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnREQUEST_STATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_STATUS_ID = value;
					this.SendPropertyChanged("REQUEST_STATUS_ID");
					this.OnREQUEST_STATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBMITTED_DATE", DbType="Date NOT NULL")]
		public System.DateTime SUBMITTED_DATE
		{
			get
			{
				return this._SUBMITTED_DATE;
			}
			set
			{
				if ((this._SUBMITTED_DATE != value))
				{
					this.OnSUBMITTED_DATEChanging(value);
					this.SendPropertyChanging();
					this._SUBMITTED_DATE = value;
					this.SendPropertyChanged("SUBMITTED_DATE");
					this.OnSUBMITTED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUESTED_DUE_DATE", DbType="Date NOT NULL")]
		public System.DateTime REQUESTED_DUE_DATE
		{
			get
			{
				return this._REQUESTED_DUE_DATE;
			}
			set
			{
				if ((this._REQUESTED_DUE_DATE != value))
				{
					this.OnREQUESTED_DUE_DATEChanging(value);
					this.SendPropertyChanging();
					this._REQUESTED_DUE_DATE = value;
					this.SendPropertyChanged("REQUESTED_DUE_DATE");
					this.OnREQUESTED_DUE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTIMATED_DUE_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> ESTIMATED_DUE_DATE
		{
			get
			{
				return this._ESTIMATED_DUE_DATE;
			}
			set
			{
				if ((this._ESTIMATED_DUE_DATE != value))
				{
					this.OnESTIMATED_DUE_DATEChanging(value);
					this.SendPropertyChanging();
					this._ESTIMATED_DUE_DATE = value;
					this.SendPropertyChanged("ESTIMATED_DUE_DATE");
					this.OnESTIMATED_DUE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_QUEUE_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> MANAGER_QUEUE_DATE
		{
			get
			{
				return this._MANAGER_QUEUE_DATE;
			}
			set
			{
				if ((this._MANAGER_QUEUE_DATE != value))
				{
					this.OnMANAGER_QUEUE_DATEChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_QUEUE_DATE = value;
					this.SendPropertyChanged("MANAGER_QUEUE_DATE");
					this.OnMANAGER_QUEUE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_APPROVED_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> MANAGER_APPROVED_DATE
		{
			get
			{
				return this._MANAGER_APPROVED_DATE;
			}
			set
			{
				if ((this._MANAGER_APPROVED_DATE != value))
				{
					this.OnMANAGER_APPROVED_DATEChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_APPROVED_DATE = value;
					this.SendPropertyChanged("MANAGER_APPROVED_DATE");
					this.OnMANAGER_APPROVED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOLD_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> HOLD_DATE
		{
			get
			{
				return this._HOLD_DATE;
			}
			set
			{
				if ((this._HOLD_DATE != value))
				{
					this.OnHOLD_DATEChanging(value);
					this.SendPropertyChanging();
					this._HOLD_DATE = value;
					this.SendPropertyChanged("HOLD_DATE");
					this.OnHOLD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESUME_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> RESUME_DATE
		{
			get
			{
				return this._RESUME_DATE;
			}
			set
			{
				if ((this._RESUME_DATE != value))
				{
					this.OnRESUME_DATEChanging(value);
					this.SendPropertyChanging();
					this._RESUME_DATE = value;
					this.SendPropertyChanged("RESUME_DATE");
					this.OnRESUME_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLOSED_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> CLOSED_DATE
		{
			get
			{
				return this._CLOSED_DATE;
			}
			set
			{
				if ((this._CLOSED_DATE != value))
				{
					this.OnCLOSED_DATEChanging(value);
					this.SendPropertyChanging();
					this._CLOSED_DATE = value;
					this.SendPropertyChanged("CLOSED_DATE");
					this.OnCLOSED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_UPDATED_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime LAST_UPDATED_DATE
		{
			get
			{
				return this._LAST_UPDATED_DATE;
			}
			set
			{
				if ((this._LAST_UPDATED_DATE != value))
				{
					this.OnLAST_UPDATED_DATEChanging(value);
					this.SendPropertyChanging();
					this._LAST_UPDATED_DATE = value;
					this.SendPropertyChanged("LAST_UPDATED_DATE");
					this.OnLAST_UPDATED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTIMATED_HOURS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ESTIMATED_HOURS
		{
			get
			{
				return this._ESTIMATED_HOURS;
			}
			set
			{
				if ((this._ESTIMATED_HOURS != value))
				{
					this.OnESTIMATED_HOURSChanging(value);
					this.SendPropertyChanging();
					this._ESTIMATED_HOURS = value;
					this.SendPropertyChanged("ESTIMATED_HOURS");
					this.OnESTIMATED_HOURSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> VALUE
		{
			get
			{
				return this._VALUE;
			}
			set
			{
				if ((this._VALUE != value))
				{
					this.OnVALUEChanging(value);
					this.SendPropertyChanging();
					this._VALUE = value;
					this.SendPropertyChanged("VALUE");
					this.OnVALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTIMATED_COST", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ESTIMATED_COST
		{
			get
			{
				return this._ESTIMATED_COST;
			}
			set
			{
				if ((this._ESTIMATED_COST != value))
				{
					this.OnESTIMATED_COSTChanging(value);
					this.SendPropertyChanging();
					this._ESTIMATED_COST = value;
					this.SendPropertyChanged("ESTIMATED_COST");
					this.OnESTIMATED_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTUAL_COST", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ACTUAL_COST
		{
			get
			{
				return this._ACTUAL_COST;
			}
			set
			{
				if ((this._ACTUAL_COST != value))
				{
					this.OnACTUAL_COSTChanging(value);
					this.SendPropertyChanging();
					this._ACTUAL_COST = value;
					this.SendPropertyChanged("ACTUAL_COST");
					this.OnACTUAL_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_SUMMARY", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string REQUEST_SUMMARY
		{
			get
			{
				return this._REQUEST_SUMMARY;
			}
			set
			{
				if ((this._REQUEST_SUMMARY != value))
				{
					this.OnREQUEST_SUMMARYChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_SUMMARY = value;
					this.SendPropertyChanged("REQUEST_SUMMARY");
					this.OnREQUEST_SUMMARYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_DESCRIPTION", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string REQUEST_DESCRIPTION
		{
			get
			{
				return this._REQUEST_DESCRIPTION;
			}
			set
			{
				if ((this._REQUEST_DESCRIPTION != value))
				{
					this.OnREQUEST_DESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_DESCRIPTION = value;
					this.SendPropertyChanged("REQUEST_DESCRIPTION");
					this.OnREQUEST_DESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESOLUTION", DbType="VarChar(250)")]
		public string RESOLUTION
		{
			get
			{
				return this._RESOLUTION;
			}
			set
			{
				if ((this._RESOLUTION != value))
				{
					this.OnRESOLUTIONChanging(value);
					this.SendPropertyChanging();
					this._RESOLUTION = value;
					this.SendPropertyChanged("RESOLUTION");
					this.OnRESOLUTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE_REASON", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string VALUE_REASON
		{
			get
			{
				return this._VALUE_REASON;
			}
			set
			{
				if ((this._VALUE_REASON != value))
				{
					this.OnVALUE_REASONChanging(value);
					this.SendPropertyChanging();
					this._VALUE_REASON = value;
					this.SendPropertyChanged("VALUE_REASON");
					this.OnVALUE_REASONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IT_FEATURE", DbType="VarChar(10)")]
		public string IT_FEATURE
		{
			get
			{
				return this._IT_FEATURE;
			}
			set
			{
				if ((this._IT_FEATURE != value))
				{
					this.OnIT_FEATUREChanging(value);
					this.SendPropertyChanging();
					this._IT_FEATURE = value;
					this.SendPropertyChanged("IT_FEATURE");
					this.OnIT_FEATUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOP_OFFNET_ATTRIBUTE_NUMBER", DbType="VarChar(10)")]
		public string TOP_OFFNET_ATTRIBUTE_NUMBER
		{
			get
			{
				return this._TOP_OFFNET_ATTRIBUTE_NUMBER;
			}
			set
			{
				if ((this._TOP_OFFNET_ATTRIBUTE_NUMBER != value))
				{
					this.OnTOP_OFFNET_ATTRIBUTE_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._TOP_OFFNET_ATTRIBUTE_NUMBER = value;
					this.SendPropertyChanged("TOP_OFFNET_ATTRIBUTE_NUMBER");
					this.OnTOP_OFFNET_ATTRIBUTE_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_NOTE", DbType="VarChar(200)")]
		public string MANAGER_NOTE
		{
			get
			{
				return this._MANAGER_NOTE;
			}
			set
			{
				if ((this._MANAGER_NOTE != value))
				{
					this.OnMANAGER_NOTEChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_NOTE = value;
					this.SendPropertyChanged("MANAGER_NOTE");
					this.OnMANAGER_NOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_ELEMENT", Storage="_ELEMENTs", ThisKey="REQUEST_ID", OtherKey="PARENT_REQUEST_ID")]
		public EntitySet<ELEMENT> ELEMENTs
		{
			get
			{
				return this._ELEMENTs;
			}
			set
			{
				this._ELEMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROGRAM_REQUEST", Storage="_PROGRAM", ThisKey="PROGRAM_ID", OtherKey="PROGRAM_ID", IsForeignKey=true)]
		public PROGRAM PROGRAM
		{
			get
			{
				return this._PROGRAM.Entity;
			}
			set
			{
				PROGRAM previousValue = this._PROGRAM.Entity;
				if (((previousValue != value) 
							|| (this._PROGRAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROGRAM.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._PROGRAM.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._PROGRAM_ID = value.PROGRAM_ID;
					}
					else
					{
						this._PROGRAM_ID = default(Nullable<short>);
					}
					this.SendPropertyChanged("PROGRAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_STATUS_REQUEST", Storage="_REQUEST_STATUS", ThisKey="REQUEST_STATUS_ID", OtherKey="REQUEST_STATUS_ID", IsForeignKey=true)]
		public REQUEST_STATUS REQUEST_STATUS
		{
			get
			{
				return this._REQUEST_STATUS.Entity;
			}
			set
			{
				REQUEST_STATUS previousValue = this._REQUEST_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._REQUEST_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REQUEST_STATUS.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._REQUEST_STATUS.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._REQUEST_STATUS_ID = value.REQUEST_STATUS_ID;
					}
					else
					{
						this._REQUEST_STATUS_ID = default(byte);
					}
					this.SendPropertyChanged("REQUEST_STATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPORT_AREA_REQUEST", Storage="_SUPPORT_AREA", ThisKey="SUPPORT_AREA_ID", OtherKey="SUPPORT_AREA_ID", IsForeignKey=true)]
		public SUPPORT_AREA SUPPORT_AREA
		{
			get
			{
				return this._SUPPORT_AREA.Entity;
			}
			set
			{
				SUPPORT_AREA previousValue = this._SUPPORT_AREA.Entity;
				if (((previousValue != value) 
							|| (this._SUPPORT_AREA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUPPORT_AREA.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._SUPPORT_AREA.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._SUPPORT_AREA_ID = value.SUPPORT_AREA_ID;
					}
					else
					{
						this._SUPPORT_AREA_ID = default(Nullable<short>);
					}
					this.SendPropertyChanged("SUPPORT_AREA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_TYPE_REQUEST", Storage="_REQUEST_TYPE", ThisKey="REQUEST_TYPE_ID", OtherKey="REQUEST_TYPE_ID", IsForeignKey=true)]
		public REQUEST_TYPE REQUEST_TYPE
		{
			get
			{
				return this._REQUEST_TYPE.Entity;
			}
			set
			{
				REQUEST_TYPE previousValue = this._REQUEST_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._REQUEST_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REQUEST_TYPE.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._REQUEST_TYPE.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._REQUEST_TYPE_ID = value.REQUEST_TYPE_ID;
					}
					else
					{
						this._REQUEST_TYPE_ID = default(short);
					}
					this.SendPropertyChanged("REQUEST_TYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_CATEGORY_REQUEST", Storage="_REQUEST_CATEGORY", ThisKey="REQUEST_CATEGORY_ID", OtherKey="REQUEST_CATEGORY_ID", IsForeignKey=true)]
		public REQUEST_CATEGORY REQUEST_CATEGORY
		{
			get
			{
				return this._REQUEST_CATEGORY.Entity;
			}
			set
			{
				REQUEST_CATEGORY previousValue = this._REQUEST_CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._REQUEST_CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REQUEST_CATEGORY.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._REQUEST_CATEGORY.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._REQUEST_CATEGORY_ID = value.REQUEST_CATEGORY_ID;
					}
					else
					{
						this._REQUEST_CATEGORY_ID = default(short);
					}
					this.SendPropertyChanged("REQUEST_CATEGORY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VALUE_DRIVER_REQUEST", Storage="_VALUE_DRIVER", ThisKey="VALUE_DRIVER_ID", OtherKey="VALUE_DRIVER_ID", IsForeignKey=true)]
		public VALUE_DRIVER VALUE_DRIVER
		{
			get
			{
				return this._VALUE_DRIVER.Entity;
			}
			set
			{
				VALUE_DRIVER previousValue = this._VALUE_DRIVER.Entity;
				if (((previousValue != value) 
							|| (this._VALUE_DRIVER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VALUE_DRIVER.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._VALUE_DRIVER.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._VALUE_DRIVER_ID = value.VALUE_DRIVER_ID;
					}
					else
					{
						this._VALUE_DRIVER_ID = default(short);
					}
					this.SendPropertyChanged("VALUE_DRIVER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROJECT_REQUEST", Storage="_PROJECT", ThisKey="PARENT_PROJECT_ID", OtherKey="PROJECT_ID", IsForeignKey=true)]
		public PROJECT PROJECT
		{
			get
			{
				return this._PROJECT.Entity;
			}
			set
			{
				PROJECT previousValue = this._PROJECT.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._PROJECT.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._PARENT_PROJECT_ID = value.PROJECT_ID;
					}
					else
					{
						this._PARENT_PROJECT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PROJECT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ELEMENTs(ELEMENT entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST = this;
		}
		
		private void detach_ELEMENTs(ELEMENT entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.ELEMENT")]
	public partial class ELEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ELEMENT_ID;
		
		private int _ASSIGNED_TO_ID;
		
		private int _PARENT_REQUEST_ID;
		
		private byte _ELEMENT_STATUS_ID;
		
		private System.DateTime _ASSIGNED_DATE;
		
		private System.Nullable<System.DateTime> _CLOSED_DATE;
		
		private System.DateTime _LAST_UPDATED_DATE;
		
		private int _PERCENT_COMPLETE;
		
		private decimal _HOURS;
		
		private string _ELEMENT_SUMMARY;
		
		private string _RESOLUTION;
		
		private EntitySet<NOTE> _NOTEs;
		
		private EntityRef<ELEMENT_STATUS> _ELEMENT_STATUS;
		
		private EntityRef<REQUEST> _REQUEST;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnELEMENT_IDChanging(int value);
    partial void OnELEMENT_IDChanged();
    partial void OnASSIGNED_TO_IDChanging(int value);
    partial void OnASSIGNED_TO_IDChanged();
    partial void OnPARENT_REQUEST_IDChanging(int value);
    partial void OnPARENT_REQUEST_IDChanged();
    partial void OnELEMENT_STATUS_IDChanging(byte value);
    partial void OnELEMENT_STATUS_IDChanged();
    partial void OnASSIGNED_DATEChanging(System.DateTime value);
    partial void OnASSIGNED_DATEChanged();
    partial void OnCLOSED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCLOSED_DATEChanged();
    partial void OnLAST_UPDATED_DATEChanging(System.DateTime value);
    partial void OnLAST_UPDATED_DATEChanged();
    partial void OnPERCENT_COMPLETEChanging(int value);
    partial void OnPERCENT_COMPLETEChanged();
    partial void OnHOURSChanging(decimal value);
    partial void OnHOURSChanged();
    partial void OnELEMENT_SUMMARYChanging(string value);
    partial void OnELEMENT_SUMMARYChanged();
    partial void OnRESOLUTIONChanging(string value);
    partial void OnRESOLUTIONChanged();
    #endregion
		
		public ELEMENT()
		{
			this._NOTEs = new EntitySet<NOTE>(new Action<NOTE>(this.attach_NOTEs), new Action<NOTE>(this.detach_NOTEs));
			this._ELEMENT_STATUS = default(EntityRef<ELEMENT_STATUS>);
			this._REQUEST = default(EntityRef<REQUEST>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELEMENT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ELEMENT_ID
		{
			get
			{
				return this._ELEMENT_ID;
			}
			set
			{
				if ((this._ELEMENT_ID != value))
				{
					this.OnELEMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._ELEMENT_ID = value;
					this.SendPropertyChanged("ELEMENT_ID");
					this.OnELEMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASSIGNED_TO_ID", DbType="Int NOT NULL")]
		public int ASSIGNED_TO_ID
		{
			get
			{
				return this._ASSIGNED_TO_ID;
			}
			set
			{
				if ((this._ASSIGNED_TO_ID != value))
				{
					this.OnASSIGNED_TO_IDChanging(value);
					this.SendPropertyChanging();
					this._ASSIGNED_TO_ID = value;
					this.SendPropertyChanged("ASSIGNED_TO_ID");
					this.OnASSIGNED_TO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENT_REQUEST_ID", DbType="Int NOT NULL")]
		public int PARENT_REQUEST_ID
		{
			get
			{
				return this._PARENT_REQUEST_ID;
			}
			set
			{
				if ((this._PARENT_REQUEST_ID != value))
				{
					if (this._REQUEST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPARENT_REQUEST_IDChanging(value);
					this.SendPropertyChanging();
					this._PARENT_REQUEST_ID = value;
					this.SendPropertyChanged("PARENT_REQUEST_ID");
					this.OnPARENT_REQUEST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELEMENT_STATUS_ID", DbType="TinyInt NOT NULL")]
		public byte ELEMENT_STATUS_ID
		{
			get
			{
				return this._ELEMENT_STATUS_ID;
			}
			set
			{
				if ((this._ELEMENT_STATUS_ID != value))
				{
					if (this._ELEMENT_STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnELEMENT_STATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._ELEMENT_STATUS_ID = value;
					this.SendPropertyChanged("ELEMENT_STATUS_ID");
					this.OnELEMENT_STATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASSIGNED_DATE", DbType="Date NOT NULL")]
		public System.DateTime ASSIGNED_DATE
		{
			get
			{
				return this._ASSIGNED_DATE;
			}
			set
			{
				if ((this._ASSIGNED_DATE != value))
				{
					this.OnASSIGNED_DATEChanging(value);
					this.SendPropertyChanging();
					this._ASSIGNED_DATE = value;
					this.SendPropertyChanged("ASSIGNED_DATE");
					this.OnASSIGNED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLOSED_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> CLOSED_DATE
		{
			get
			{
				return this._CLOSED_DATE;
			}
			set
			{
				if ((this._CLOSED_DATE != value))
				{
					this.OnCLOSED_DATEChanging(value);
					this.SendPropertyChanging();
					this._CLOSED_DATE = value;
					this.SendPropertyChanged("CLOSED_DATE");
					this.OnCLOSED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_UPDATED_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime LAST_UPDATED_DATE
		{
			get
			{
				return this._LAST_UPDATED_DATE;
			}
			set
			{
				if ((this._LAST_UPDATED_DATE != value))
				{
					this.OnLAST_UPDATED_DATEChanging(value);
					this.SendPropertyChanging();
					this._LAST_UPDATED_DATE = value;
					this.SendPropertyChanged("LAST_UPDATED_DATE");
					this.OnLAST_UPDATED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERCENT_COMPLETE", DbType="Int NOT NULL")]
		public int PERCENT_COMPLETE
		{
			get
			{
				return this._PERCENT_COMPLETE;
			}
			set
			{
				if ((this._PERCENT_COMPLETE != value))
				{
					this.OnPERCENT_COMPLETEChanging(value);
					this.SendPropertyChanging();
					this._PERCENT_COMPLETE = value;
					this.SendPropertyChanged("PERCENT_COMPLETE");
					this.OnPERCENT_COMPLETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOURS", DbType="Decimal(18,2) NOT NULL")]
		public decimal HOURS
		{
			get
			{
				return this._HOURS;
			}
			set
			{
				if ((this._HOURS != value))
				{
					this.OnHOURSChanging(value);
					this.SendPropertyChanging();
					this._HOURS = value;
					this.SendPropertyChanged("HOURS");
					this.OnHOURSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELEMENT_SUMMARY", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ELEMENT_SUMMARY
		{
			get
			{
				return this._ELEMENT_SUMMARY;
			}
			set
			{
				if ((this._ELEMENT_SUMMARY != value))
				{
					this.OnELEMENT_SUMMARYChanging(value);
					this.SendPropertyChanging();
					this._ELEMENT_SUMMARY = value;
					this.SendPropertyChanged("ELEMENT_SUMMARY");
					this.OnELEMENT_SUMMARYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESOLUTION", DbType="VarChar(250)")]
		public string RESOLUTION
		{
			get
			{
				return this._RESOLUTION;
			}
			set
			{
				if ((this._RESOLUTION != value))
				{
					this.OnRESOLUTIONChanging(value);
					this.SendPropertyChanging();
					this._RESOLUTION = value;
					this.SendPropertyChanged("RESOLUTION");
					this.OnRESOLUTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_NOTE", Storage="_NOTEs", ThisKey="ELEMENT_ID", OtherKey="ELEMENT_ID")]
		public EntitySet<NOTE> NOTEs
		{
			get
			{
				return this._NOTEs;
			}
			set
			{
				this._NOTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELEMENT_STATUS_ELEMENT", Storage="_ELEMENT_STATUS", ThisKey="ELEMENT_STATUS_ID", OtherKey="ELEMENT_STATUS_ID", IsForeignKey=true)]
		public ELEMENT_STATUS ELEMENT_STATUS
		{
			get
			{
				return this._ELEMENT_STATUS.Entity;
			}
			set
			{
				ELEMENT_STATUS previousValue = this._ELEMENT_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._ELEMENT_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELEMENT_STATUS.Entity = null;
						previousValue.ELEMENTs.Remove(this);
					}
					this._ELEMENT_STATUS.Entity = value;
					if ((value != null))
					{
						value.ELEMENTs.Add(this);
						this._ELEMENT_STATUS_ID = value.ELEMENT_STATUS_ID;
					}
					else
					{
						this._ELEMENT_STATUS_ID = default(byte);
					}
					this.SendPropertyChanged("ELEMENT_STATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_ELEMENT", Storage="_REQUEST", ThisKey="PARENT_REQUEST_ID", OtherKey="REQUEST_ID", IsForeignKey=true)]
		public REQUEST REQUEST
		{
			get
			{
				return this._REQUEST.Entity;
			}
			set
			{
				REQUEST previousValue = this._REQUEST.Entity;
				if (((previousValue != value) 
							|| (this._REQUEST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REQUEST.Entity = null;
						previousValue.ELEMENTs.Remove(this);
					}
					this._REQUEST.Entity = value;
					if ((value != null))
					{
						value.ELEMENTs.Add(this);
						this._PARENT_REQUEST_ID = value.REQUEST_ID;
					}
					else
					{
						this._PARENT_REQUEST_ID = default(int);
					}
					this.SendPropertyChanged("REQUEST");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NOTEs(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT = this;
		}
		
		private void detach_NOTEs(NOTE entity)
		{
			this.SendPropertyChanging();
			entity.ELEMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.REQUEST_TYPE")]
	public partial class REQUEST_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _REQUEST_TYPE_ID;
		
		private string _REQUEST_TYPE_TEXT;
		
		private bool _ACTIVE;
		
		private string _COMMENT;
		
		private EntitySet<REQUEST> _REQUESTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREQUEST_TYPE_IDChanging(short value);
    partial void OnREQUEST_TYPE_IDChanged();
    partial void OnREQUEST_TYPE_TEXTChanging(string value);
    partial void OnREQUEST_TYPE_TEXTChanged();
    partial void OnACTIVEChanging(bool value);
    partial void OnACTIVEChanged();
    partial void OnCOMMENTChanging(string value);
    partial void OnCOMMENTChanged();
    #endregion
		
		public REQUEST_TYPE()
		{
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short REQUEST_TYPE_ID
		{
			get
			{
				return this._REQUEST_TYPE_ID;
			}
			set
			{
				if ((this._REQUEST_TYPE_ID != value))
				{
					this.OnREQUEST_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_TYPE_ID = value;
					this.SendPropertyChanged("REQUEST_TYPE_ID");
					this.OnREQUEST_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_TYPE_TEXT", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string REQUEST_TYPE_TEXT
		{
			get
			{
				return this._REQUEST_TYPE_TEXT;
			}
			set
			{
				if ((this._REQUEST_TYPE_TEXT != value))
				{
					this.OnREQUEST_TYPE_TEXTChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_TYPE_TEXT = value;
					this.SendPropertyChanged("REQUEST_TYPE_TEXT");
					this.OnREQUEST_TYPE_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit NOT NULL")]
		public bool ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMENT", DbType="VarChar(250)")]
		public string COMMENT
		{
			get
			{
				return this._COMMENT;
			}
			set
			{
				if ((this._COMMENT != value))
				{
					this.OnCOMMENTChanging(value);
					this.SendPropertyChanging();
					this._COMMENT = value;
					this.SendPropertyChanged("COMMENT");
					this.OnCOMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_TYPE_REQUEST", Storage="_REQUESTs", ThisKey="REQUEST_TYPE_ID", OtherKey="REQUEST_TYPE_ID")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST_TYPE = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.REQUEST_CATEGORY")]
	public partial class REQUEST_CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _REQUEST_CATEGORY_ID;
		
		private string _REQUEST_CATEGORY_TEXT;
		
		private bool _ACTIVE;
		
		private string _COMMENT;
		
		private EntitySet<REQUEST> _REQUESTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREQUEST_CATEGORY_IDChanging(short value);
    partial void OnREQUEST_CATEGORY_IDChanged();
    partial void OnREQUEST_CATEGORY_TEXTChanging(string value);
    partial void OnREQUEST_CATEGORY_TEXTChanged();
    partial void OnACTIVEChanging(bool value);
    partial void OnACTIVEChanged();
    partial void OnCOMMENTChanging(string value);
    partial void OnCOMMENTChanged();
    #endregion
		
		public REQUEST_CATEGORY()
		{
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_CATEGORY_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short REQUEST_CATEGORY_ID
		{
			get
			{
				return this._REQUEST_CATEGORY_ID;
			}
			set
			{
				if ((this._REQUEST_CATEGORY_ID != value))
				{
					this.OnREQUEST_CATEGORY_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_CATEGORY_ID = value;
					this.SendPropertyChanged("REQUEST_CATEGORY_ID");
					this.OnREQUEST_CATEGORY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_CATEGORY_TEXT", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string REQUEST_CATEGORY_TEXT
		{
			get
			{
				return this._REQUEST_CATEGORY_TEXT;
			}
			set
			{
				if ((this._REQUEST_CATEGORY_TEXT != value))
				{
					this.OnREQUEST_CATEGORY_TEXTChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_CATEGORY_TEXT = value;
					this.SendPropertyChanged("REQUEST_CATEGORY_TEXT");
					this.OnREQUEST_CATEGORY_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit NOT NULL")]
		public bool ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMENT", DbType="VarChar(250)")]
		public string COMMENT
		{
			get
			{
				return this._COMMENT;
			}
			set
			{
				if ((this._COMMENT != value))
				{
					this.OnCOMMENTChanging(value);
					this.SendPropertyChanging();
					this._COMMENT = value;
					this.SendPropertyChanged("COMMENT");
					this.OnCOMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_CATEGORY_REQUEST", Storage="_REQUESTs", ThisKey="REQUEST_CATEGORY_ID", OtherKey="REQUEST_CATEGORY_ID")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST_CATEGORY = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST_CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.PROJECT_TYPE")]
	public partial class PROJECT_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _PROJECT_TYPE_ID;
		
		private string _PROJECT_TYPE_TEXT;
		
		private bool _ACTIVE;
		
		private string _COMMENT;
		
		private EntitySet<PROJECT> _PROJECTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROJECT_TYPE_IDChanging(short value);
    partial void OnPROJECT_TYPE_IDChanged();
    partial void OnPROJECT_TYPE_TEXTChanging(string value);
    partial void OnPROJECT_TYPE_TEXTChanged();
    partial void OnACTIVEChanging(bool value);
    partial void OnACTIVEChanged();
    partial void OnCOMMENTChanging(string value);
    partial void OnCOMMENTChanged();
    #endregion
		
		public PROJECT_TYPE()
		{
			this._PROJECTs = new EntitySet<PROJECT>(new Action<PROJECT>(this.attach_PROJECTs), new Action<PROJECT>(this.detach_PROJECTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short PROJECT_TYPE_ID
		{
			get
			{
				return this._PROJECT_TYPE_ID;
			}
			set
			{
				if ((this._PROJECT_TYPE_ID != value))
				{
					this.OnPROJECT_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_TYPE_ID = value;
					this.SendPropertyChanged("PROJECT_TYPE_ID");
					this.OnPROJECT_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_TYPE_TEXT", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PROJECT_TYPE_TEXT
		{
			get
			{
				return this._PROJECT_TYPE_TEXT;
			}
			set
			{
				if ((this._PROJECT_TYPE_TEXT != value))
				{
					this.OnPROJECT_TYPE_TEXTChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_TYPE_TEXT = value;
					this.SendPropertyChanged("PROJECT_TYPE_TEXT");
					this.OnPROJECT_TYPE_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit NOT NULL")]
		public bool ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMENT", DbType="VarChar(250)")]
		public string COMMENT
		{
			get
			{
				return this._COMMENT;
			}
			set
			{
				if ((this._COMMENT != value))
				{
					this.OnCOMMENTChanging(value);
					this.SendPropertyChanging();
					this._COMMENT = value;
					this.SendPropertyChanged("COMMENT");
					this.OnCOMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROJECT_TYPE_PROJECT", Storage="_PROJECTs", ThisKey="PROJECT_TYPE_ID", OtherKey="PROJECT_TYPE_ID")]
		public EntitySet<PROJECT> PROJECTs
		{
			get
			{
				return this._PROJECTs;
			}
			set
			{
				this._PROJECTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_TYPE = this;
		}
		
		private void detach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.VALUE_DRIVER")]
	public partial class VALUE_DRIVER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _VALUE_DRIVER_ID;
		
		private string _VALUE_DRIVER_TEXT;
		
		private string _COMMENT;
		
		private EntitySet<REQUEST> _REQUESTs;
		
		private EntitySet<PROJECT> _PROJECTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVALUE_DRIVER_IDChanging(short value);
    partial void OnVALUE_DRIVER_IDChanged();
    partial void OnVALUE_DRIVER_TEXTChanging(string value);
    partial void OnVALUE_DRIVER_TEXTChanged();
    partial void OnCOMMENTChanging(string value);
    partial void OnCOMMENTChanged();
    #endregion
		
		public VALUE_DRIVER()
		{
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			this._PROJECTs = new EntitySet<PROJECT>(new Action<PROJECT>(this.attach_PROJECTs), new Action<PROJECT>(this.detach_PROJECTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE_DRIVER_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short VALUE_DRIVER_ID
		{
			get
			{
				return this._VALUE_DRIVER_ID;
			}
			set
			{
				if ((this._VALUE_DRIVER_ID != value))
				{
					this.OnVALUE_DRIVER_IDChanging(value);
					this.SendPropertyChanging();
					this._VALUE_DRIVER_ID = value;
					this.SendPropertyChanged("VALUE_DRIVER_ID");
					this.OnVALUE_DRIVER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE_DRIVER_TEXT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VALUE_DRIVER_TEXT
		{
			get
			{
				return this._VALUE_DRIVER_TEXT;
			}
			set
			{
				if ((this._VALUE_DRIVER_TEXT != value))
				{
					this.OnVALUE_DRIVER_TEXTChanging(value);
					this.SendPropertyChanging();
					this._VALUE_DRIVER_TEXT = value;
					this.SendPropertyChanged("VALUE_DRIVER_TEXT");
					this.OnVALUE_DRIVER_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMENT", DbType="VarChar(250)")]
		public string COMMENT
		{
			get
			{
				return this._COMMENT;
			}
			set
			{
				if ((this._COMMENT != value))
				{
					this.OnCOMMENTChanging(value);
					this.SendPropertyChanging();
					this._COMMENT = value;
					this.SendPropertyChanged("COMMENT");
					this.OnCOMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VALUE_DRIVER_REQUEST", Storage="_REQUESTs", ThisKey="VALUE_DRIVER_ID", OtherKey="VALUE_DRIVER_ID")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VALUE_DRIVER_PROJECT", Storage="_PROJECTs", ThisKey="VALUE_DRIVER_ID", OtherKey="VALUE_DRIVER_ID")]
		public EntitySet<PROJECT> PROJECTs
		{
			get
			{
				return this._PROJECTs;
			}
			set
			{
				this._PROJECTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.VALUE_DRIVER = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.VALUE_DRIVER = null;
		}
		
		private void attach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.VALUE_DRIVER = this;
		}
		
		private void detach_PROJECTs(PROJECT entity)
		{
			this.SendPropertyChanging();
			entity.VALUE_DRIVER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.PROJECT")]
	public partial class PROJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PROJECT_ID;
		
		private int _SUBMITTED_BY_ID;
		
		private int _REQUESTED_BY_ID;
		
		private short _PROJECT_TYPE_ID;
		
		private System.Nullable<short> _SUPPORT_AREA_ID;
		
		private System.Nullable<short> _PROGRAM_ID;
		
		private short _VALUE_DRIVER_ID;
		
		private byte _PROJECT_STATUS_ID;
		
		private System.DateTime _SUBMITTED_DATE;
		
		private System.DateTime _REQUESTED_DUE_DATE;
		
		private System.Nullable<System.DateTime> _ESTIMATED_DUE_DATE;
		
		private System.Nullable<System.DateTime> _MANAGER_QUEUE_DATE;
		
		private System.Nullable<System.DateTime> _MANAGER_APPROVED_DATE;
		
		private System.Nullable<System.DateTime> _HOLD_DATE;
		
		private System.Nullable<System.DateTime> _RESUME_DATE;
		
		private System.Nullable<System.DateTime> _CLOSED_DATE;
		
		private System.DateTime _LAST_UPDATED_DATE;
		
		private System.Nullable<decimal> _ESTIMATED_HOURS;
		
		private System.Nullable<decimal> _VALUE;
		
		private System.Nullable<decimal> _ESTIMATED_COST;
		
		private System.Nullable<decimal> _ACTUAL_COST;
		
		private string _PROJECT_SUMMARY;
		
		private string _PROJECT_DESCRIPTION;
		
		private string _VALUE_REASON;
		
		private string _MANAGER_NOTE;
		
		private System.Nullable<int> _PROJECT_LEAD_ID;
		
		private System.DateTime _start_date;
		
		private EntitySet<REQUEST> _REQUESTs;
		
		private EntityRef<PROGRAM> _PROGRAM;
		
		private EntityRef<PROJECT_STATUS> _PROJECT_STATUS;
		
		private EntityRef<PROJECT_TYPE> _PROJECT_TYPE;
		
		private EntityRef<SUPPORT_AREA> _SUPPORT_AREA;
		
		private EntityRef<VALUE_DRIVER> _VALUE_DRIVER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROJECT_IDChanging(int value);
    partial void OnPROJECT_IDChanged();
    partial void OnSUBMITTED_BY_IDChanging(int value);
    partial void OnSUBMITTED_BY_IDChanged();
    partial void OnREQUESTED_BY_IDChanging(int value);
    partial void OnREQUESTED_BY_IDChanged();
    partial void OnPROJECT_TYPE_IDChanging(short value);
    partial void OnPROJECT_TYPE_IDChanged();
    partial void OnSUPPORT_AREA_IDChanging(System.Nullable<short> value);
    partial void OnSUPPORT_AREA_IDChanged();
    partial void OnPROGRAM_IDChanging(System.Nullable<short> value);
    partial void OnPROGRAM_IDChanged();
    partial void OnVALUE_DRIVER_IDChanging(short value);
    partial void OnVALUE_DRIVER_IDChanged();
    partial void OnPROJECT_STATUS_IDChanging(byte value);
    partial void OnPROJECT_STATUS_IDChanged();
    partial void OnSUBMITTED_DATEChanging(System.DateTime value);
    partial void OnSUBMITTED_DATEChanged();
    partial void OnREQUESTED_DUE_DATEChanging(System.DateTime value);
    partial void OnREQUESTED_DUE_DATEChanged();
    partial void OnESTIMATED_DUE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnESTIMATED_DUE_DATEChanged();
    partial void OnMANAGER_QUEUE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMANAGER_QUEUE_DATEChanged();
    partial void OnMANAGER_APPROVED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMANAGER_APPROVED_DATEChanged();
    partial void OnHOLD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnHOLD_DATEChanged();
    partial void OnRESUME_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRESUME_DATEChanged();
    partial void OnCLOSED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCLOSED_DATEChanged();
    partial void OnLAST_UPDATED_DATEChanging(System.DateTime value);
    partial void OnLAST_UPDATED_DATEChanged();
    partial void OnESTIMATED_HOURSChanging(System.Nullable<decimal> value);
    partial void OnESTIMATED_HOURSChanged();
    partial void OnVALUEChanging(System.Nullable<decimal> value);
    partial void OnVALUEChanged();
    partial void OnESTIMATED_COSTChanging(System.Nullable<decimal> value);
    partial void OnESTIMATED_COSTChanged();
    partial void OnACTUAL_COSTChanging(System.Nullable<decimal> value);
    partial void OnACTUAL_COSTChanged();
    partial void OnPROJECT_SUMMARYChanging(string value);
    partial void OnPROJECT_SUMMARYChanged();
    partial void OnPROJECT_DESCRIPTIONChanging(string value);
    partial void OnPROJECT_DESCRIPTIONChanged();
    partial void OnVALUE_REASONChanging(string value);
    partial void OnVALUE_REASONChanged();
    partial void OnMANAGER_NOTEChanging(string value);
    partial void OnMANAGER_NOTEChanged();
    partial void OnPROJECT_LEAD_IDChanging(System.Nullable<int> value);
    partial void OnPROJECT_LEAD_IDChanged();
    partial void OnSTART_DATEChanging(System.DateTime value);
    partial void OnSTART_DATEChanged();
    #endregion
		
		public PROJECT()
		{
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			this._PROGRAM = default(EntityRef<PROGRAM>);
			this._PROJECT_STATUS = default(EntityRef<PROJECT_STATUS>);
			this._PROJECT_TYPE = default(EntityRef<PROJECT_TYPE>);
			this._SUPPORT_AREA = default(EntityRef<SUPPORT_AREA>);
			this._VALUE_DRIVER = default(EntityRef<VALUE_DRIVER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PROJECT_ID
		{
			get
			{
				return this._PROJECT_ID;
			}
			set
			{
				if ((this._PROJECT_ID != value))
				{
					this.OnPROJECT_IDChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_ID = value;
					this.SendPropertyChanged("PROJECT_ID");
					this.OnPROJECT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBMITTED_BY_ID", DbType="Int NOT NULL")]
		public int SUBMITTED_BY_ID
		{
			get
			{
				return this._SUBMITTED_BY_ID;
			}
			set
			{
				if ((this._SUBMITTED_BY_ID != value))
				{
					this.OnSUBMITTED_BY_IDChanging(value);
					this.SendPropertyChanging();
					this._SUBMITTED_BY_ID = value;
					this.SendPropertyChanged("SUBMITTED_BY_ID");
					this.OnSUBMITTED_BY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUESTED_BY_ID", DbType="Int NOT NULL")]
		public int REQUESTED_BY_ID
		{
			get
			{
				return this._REQUESTED_BY_ID;
			}
			set
			{
				if ((this._REQUESTED_BY_ID != value))
				{
					this.OnREQUESTED_BY_IDChanging(value);
					this.SendPropertyChanging();
					this._REQUESTED_BY_ID = value;
					this.SendPropertyChanged("REQUESTED_BY_ID");
					this.OnREQUESTED_BY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_TYPE_ID", DbType="SmallInt NOT NULL")]
		public short PROJECT_TYPE_ID
		{
			get
			{
				return this._PROJECT_TYPE_ID;
			}
			set
			{
				if ((this._PROJECT_TYPE_ID != value))
				{
					if (this._PROJECT_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROJECT_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_TYPE_ID = value;
					this.SendPropertyChanged("PROJECT_TYPE_ID");
					this.OnPROJECT_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_AREA_ID", DbType="SmallInt")]
		public System.Nullable<short> SUPPORT_AREA_ID
		{
			get
			{
				return this._SUPPORT_AREA_ID;
			}
			set
			{
				if ((this._SUPPORT_AREA_ID != value))
				{
					if (this._SUPPORT_AREA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPPORT_AREA_IDChanging(value);
					this.SendPropertyChanging();
					this._SUPPORT_AREA_ID = value;
					this.SendPropertyChanged("SUPPORT_AREA_ID");
					this.OnSUPPORT_AREA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROGRAM_ID", DbType="SmallInt")]
		public System.Nullable<short> PROGRAM_ID
		{
			get
			{
				return this._PROGRAM_ID;
			}
			set
			{
				if ((this._PROGRAM_ID != value))
				{
					if (this._PROGRAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROGRAM_IDChanging(value);
					this.SendPropertyChanging();
					this._PROGRAM_ID = value;
					this.SendPropertyChanged("PROGRAM_ID");
					this.OnPROGRAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE_DRIVER_ID", DbType="SmallInt NOT NULL")]
		public short VALUE_DRIVER_ID
		{
			get
			{
				return this._VALUE_DRIVER_ID;
			}
			set
			{
				if ((this._VALUE_DRIVER_ID != value))
				{
					if (this._VALUE_DRIVER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVALUE_DRIVER_IDChanging(value);
					this.SendPropertyChanging();
					this._VALUE_DRIVER_ID = value;
					this.SendPropertyChanged("VALUE_DRIVER_ID");
					this.OnVALUE_DRIVER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_STATUS_ID", DbType="TinyInt NOT NULL")]
		public byte PROJECT_STATUS_ID
		{
			get
			{
				return this._PROJECT_STATUS_ID;
			}
			set
			{
				if ((this._PROJECT_STATUS_ID != value))
				{
					if (this._PROJECT_STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROJECT_STATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_STATUS_ID = value;
					this.SendPropertyChanged("PROJECT_STATUS_ID");
					this.OnPROJECT_STATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBMITTED_DATE", DbType="Date NOT NULL")]
		public System.DateTime SUBMITTED_DATE
		{
			get
			{
				return this._SUBMITTED_DATE;
			}
			set
			{
				if ((this._SUBMITTED_DATE != value))
				{
					this.OnSUBMITTED_DATEChanging(value);
					this.SendPropertyChanging();
					this._SUBMITTED_DATE = value;
					this.SendPropertyChanged("SUBMITTED_DATE");
					this.OnSUBMITTED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUESTED_DUE_DATE", DbType="Date NOT NULL")]
		public System.DateTime REQUESTED_DUE_DATE
		{
			get
			{
				return this._REQUESTED_DUE_DATE;
			}
			set
			{
				if ((this._REQUESTED_DUE_DATE != value))
				{
					this.OnREQUESTED_DUE_DATEChanging(value);
					this.SendPropertyChanging();
					this._REQUESTED_DUE_DATE = value;
					this.SendPropertyChanged("REQUESTED_DUE_DATE");
					this.OnREQUESTED_DUE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTIMATED_DUE_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> ESTIMATED_DUE_DATE
		{
			get
			{
				return this._ESTIMATED_DUE_DATE;
			}
			set
			{
				if ((this._ESTIMATED_DUE_DATE != value))
				{
					this.OnESTIMATED_DUE_DATEChanging(value);
					this.SendPropertyChanging();
					this._ESTIMATED_DUE_DATE = value;
					this.SendPropertyChanged("ESTIMATED_DUE_DATE");
					this.OnESTIMATED_DUE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_QUEUE_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> MANAGER_QUEUE_DATE
		{
			get
			{
				return this._MANAGER_QUEUE_DATE;
			}
			set
			{
				if ((this._MANAGER_QUEUE_DATE != value))
				{
					this.OnMANAGER_QUEUE_DATEChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_QUEUE_DATE = value;
					this.SendPropertyChanged("MANAGER_QUEUE_DATE");
					this.OnMANAGER_QUEUE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_APPROVED_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> MANAGER_APPROVED_DATE
		{
			get
			{
				return this._MANAGER_APPROVED_DATE;
			}
			set
			{
				if ((this._MANAGER_APPROVED_DATE != value))
				{
					this.OnMANAGER_APPROVED_DATEChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_APPROVED_DATE = value;
					this.SendPropertyChanged("MANAGER_APPROVED_DATE");
					this.OnMANAGER_APPROVED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOLD_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> HOLD_DATE
		{
			get
			{
				return this._HOLD_DATE;
			}
			set
			{
				if ((this._HOLD_DATE != value))
				{
					this.OnHOLD_DATEChanging(value);
					this.SendPropertyChanging();
					this._HOLD_DATE = value;
					this.SendPropertyChanged("HOLD_DATE");
					this.OnHOLD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESUME_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> RESUME_DATE
		{
			get
			{
				return this._RESUME_DATE;
			}
			set
			{
				if ((this._RESUME_DATE != value))
				{
					this.OnRESUME_DATEChanging(value);
					this.SendPropertyChanging();
					this._RESUME_DATE = value;
					this.SendPropertyChanged("RESUME_DATE");
					this.OnRESUME_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLOSED_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> CLOSED_DATE
		{
			get
			{
				return this._CLOSED_DATE;
			}
			set
			{
				if ((this._CLOSED_DATE != value))
				{
					this.OnCLOSED_DATEChanging(value);
					this.SendPropertyChanging();
					this._CLOSED_DATE = value;
					this.SendPropertyChanged("CLOSED_DATE");
					this.OnCLOSED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_UPDATED_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime LAST_UPDATED_DATE
		{
			get
			{
				return this._LAST_UPDATED_DATE;
			}
			set
			{
				if ((this._LAST_UPDATED_DATE != value))
				{
					this.OnLAST_UPDATED_DATEChanging(value);
					this.SendPropertyChanging();
					this._LAST_UPDATED_DATE = value;
					this.SendPropertyChanged("LAST_UPDATED_DATE");
					this.OnLAST_UPDATED_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTIMATED_HOURS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ESTIMATED_HOURS
		{
			get
			{
				return this._ESTIMATED_HOURS;
			}
			set
			{
				if ((this._ESTIMATED_HOURS != value))
				{
					this.OnESTIMATED_HOURSChanging(value);
					this.SendPropertyChanging();
					this._ESTIMATED_HOURS = value;
					this.SendPropertyChanged("ESTIMATED_HOURS");
					this.OnESTIMATED_HOURSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> VALUE
		{
			get
			{
				return this._VALUE;
			}
			set
			{
				if ((this._VALUE != value))
				{
					this.OnVALUEChanging(value);
					this.SendPropertyChanging();
					this._VALUE = value;
					this.SendPropertyChanged("VALUE");
					this.OnVALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTIMATED_COST", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ESTIMATED_COST
		{
			get
			{
				return this._ESTIMATED_COST;
			}
			set
			{
				if ((this._ESTIMATED_COST != value))
				{
					this.OnESTIMATED_COSTChanging(value);
					this.SendPropertyChanging();
					this._ESTIMATED_COST = value;
					this.SendPropertyChanged("ESTIMATED_COST");
					this.OnESTIMATED_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTUAL_COST", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ACTUAL_COST
		{
			get
			{
				return this._ACTUAL_COST;
			}
			set
			{
				if ((this._ACTUAL_COST != value))
				{
					this.OnACTUAL_COSTChanging(value);
					this.SendPropertyChanging();
					this._ACTUAL_COST = value;
					this.SendPropertyChanged("ACTUAL_COST");
					this.OnACTUAL_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_SUMMARY", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PROJECT_SUMMARY
		{
			get
			{
				return this._PROJECT_SUMMARY;
			}
			set
			{
				if ((this._PROJECT_SUMMARY != value))
				{
					this.OnPROJECT_SUMMARYChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_SUMMARY = value;
					this.SendPropertyChanged("PROJECT_SUMMARY");
					this.OnPROJECT_SUMMARYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_DESCRIPTION", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string PROJECT_DESCRIPTION
		{
			get
			{
				return this._PROJECT_DESCRIPTION;
			}
			set
			{
				if ((this._PROJECT_DESCRIPTION != value))
				{
					this.OnPROJECT_DESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_DESCRIPTION = value;
					this.SendPropertyChanged("PROJECT_DESCRIPTION");
					this.OnPROJECT_DESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE_REASON", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string VALUE_REASON
		{
			get
			{
				return this._VALUE_REASON;
			}
			set
			{
				if ((this._VALUE_REASON != value))
				{
					this.OnVALUE_REASONChanging(value);
					this.SendPropertyChanging();
					this._VALUE_REASON = value;
					this.SendPropertyChanged("VALUE_REASON");
					this.OnVALUE_REASONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_NOTE", DbType="VarChar(200)")]
		public string MANAGER_NOTE
		{
			get
			{
				return this._MANAGER_NOTE;
			}
			set
			{
				if ((this._MANAGER_NOTE != value))
				{
					this.OnMANAGER_NOTEChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_NOTE = value;
					this.SendPropertyChanged("MANAGER_NOTE");
					this.OnMANAGER_NOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROJECT_LEAD_ID", DbType="Int")]
		public System.Nullable<int> PROJECT_LEAD_ID
		{
			get
			{
				return this._PROJECT_LEAD_ID;
			}
			set
			{
				if ((this._PROJECT_LEAD_ID != value))
				{
					this.OnPROJECT_LEAD_IDChanging(value);
					this.SendPropertyChanging();
					this._PROJECT_LEAD_ID = value;
					this.SendPropertyChanged("PROJECT_LEAD_ID");
					this.OnPROJECT_LEAD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.DateTime START_DATE
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.OnSTART_DATEChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("START_DATE");
					this.OnSTART_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROJECT_REQUEST", Storage="_REQUESTs", ThisKey="PROJECT_ID", OtherKey="PARENT_PROJECT_ID")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROGRAM_PROJECT", Storage="_PROGRAM", ThisKey="PROGRAM_ID", OtherKey="PROGRAM_ID", IsForeignKey=true)]
		public PROGRAM PROGRAM
		{
			get
			{
				return this._PROGRAM.Entity;
			}
			set
			{
				PROGRAM previousValue = this._PROGRAM.Entity;
				if (((previousValue != value) 
							|| (this._PROGRAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROGRAM.Entity = null;
						previousValue.PROJECTs.Remove(this);
					}
					this._PROGRAM.Entity = value;
					if ((value != null))
					{
						value.PROJECTs.Add(this);
						this._PROGRAM_ID = value.PROGRAM_ID;
					}
					else
					{
						this._PROGRAM_ID = default(Nullable<short>);
					}
					this.SendPropertyChanged("PROGRAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROJECT_STATUS_PROJECT", Storage="_PROJECT_STATUS", ThisKey="PROJECT_STATUS_ID", OtherKey="PROJECT_STATUS_ID", IsForeignKey=true)]
		public PROJECT_STATUS PROJECT_STATUS
		{
			get
			{
				return this._PROJECT_STATUS.Entity;
			}
			set
			{
				PROJECT_STATUS previousValue = this._PROJECT_STATUS.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_STATUS.Entity = null;
						previousValue.PROJECTs.Remove(this);
					}
					this._PROJECT_STATUS.Entity = value;
					if ((value != null))
					{
						value.PROJECTs.Add(this);
						this._PROJECT_STATUS_ID = value.PROJECT_STATUS_ID;
					}
					else
					{
						this._PROJECT_STATUS_ID = default(byte);
					}
					this.SendPropertyChanged("PROJECT_STATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROJECT_TYPE_PROJECT", Storage="_PROJECT_TYPE", ThisKey="PROJECT_TYPE_ID", OtherKey="PROJECT_TYPE_ID", IsForeignKey=true)]
		public PROJECT_TYPE PROJECT_TYPE
		{
			get
			{
				return this._PROJECT_TYPE.Entity;
			}
			set
			{
				PROJECT_TYPE previousValue = this._PROJECT_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._PROJECT_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROJECT_TYPE.Entity = null;
						previousValue.PROJECTs.Remove(this);
					}
					this._PROJECT_TYPE.Entity = value;
					if ((value != null))
					{
						value.PROJECTs.Add(this);
						this._PROJECT_TYPE_ID = value.PROJECT_TYPE_ID;
					}
					else
					{
						this._PROJECT_TYPE_ID = default(short);
					}
					this.SendPropertyChanged("PROJECT_TYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPORT_AREA_PROJECT", Storage="_SUPPORT_AREA", ThisKey="SUPPORT_AREA_ID", OtherKey="SUPPORT_AREA_ID", IsForeignKey=true)]
		public SUPPORT_AREA SUPPORT_AREA
		{
			get
			{
				return this._SUPPORT_AREA.Entity;
			}
			set
			{
				SUPPORT_AREA previousValue = this._SUPPORT_AREA.Entity;
				if (((previousValue != value) 
							|| (this._SUPPORT_AREA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUPPORT_AREA.Entity = null;
						previousValue.PROJECTs.Remove(this);
					}
					this._SUPPORT_AREA.Entity = value;
					if ((value != null))
					{
						value.PROJECTs.Add(this);
						this._SUPPORT_AREA_ID = value.SUPPORT_AREA_ID;
					}
					else
					{
						this._SUPPORT_AREA_ID = default(Nullable<short>);
					}
					this.SendPropertyChanged("SUPPORT_AREA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VALUE_DRIVER_PROJECT", Storage="_VALUE_DRIVER", ThisKey="VALUE_DRIVER_ID", OtherKey="VALUE_DRIVER_ID", IsForeignKey=true)]
		public VALUE_DRIVER VALUE_DRIVER
		{
			get
			{
				return this._VALUE_DRIVER.Entity;
			}
			set
			{
				VALUE_DRIVER previousValue = this._VALUE_DRIVER.Entity;
				if (((previousValue != value) 
							|| (this._VALUE_DRIVER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VALUE_DRIVER.Entity = null;
						previousValue.PROJECTs.Remove(this);
					}
					this._VALUE_DRIVER.Entity = value;
					if ((value != null))
					{
						value.PROJECTs.Add(this);
						this._VALUE_DRIVER_ID = value.VALUE_DRIVER_ID;
					}
					else
					{
						this._VALUE_DRIVER_ID = default(short);
					}
					this.SendPropertyChanged("VALUE_DRIVER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PROJECT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONSOLE.SUPPORT_AREA_TO_PROGRAM")]
	public partial class SUPPORT_AREA_TO_PROGRAM
	{
		
		private short _SUPPORT_AREA_ID;
		
		private short _PROGRAM_ID;
		
		public SUPPORT_AREA_TO_PROGRAM()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPPORT_AREA_ID", DbType="SmallInt NOT NULL")]
		public short SUPPORT_AREA_ID
		{
			get
			{
				return this._SUPPORT_AREA_ID;
			}
			set
			{
				if ((this._SUPPORT_AREA_ID != value))
				{
					this._SUPPORT_AREA_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROGRAM_ID", DbType="SmallInt NOT NULL")]
		public short PROGRAM_ID
		{
			get
			{
				return this._PROGRAM_ID;
			}
			set
			{
				if ((this._PROGRAM_ID != value))
				{
					this._PROGRAM_ID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
